{"ast":null,"code":"import _classCallCheck from\"C:/SKRYPTY/KROSNO/TypeScript/ProjektTS/PrzykladyTSReact/myreactapp/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/SKRYPTY/KROSNO/TypeScript/ProjektTS/PrzykladyTSReact/myreactapp/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _assertThisInitialized from\"C:/SKRYPTY/KROSNO/TypeScript/ProjektTS/PrzykladyTSReact/myreactapp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";import _inherits from\"C:/SKRYPTY/KROSNO/TypeScript/ProjektTS/PrzykladyTSReact/myreactapp/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"C:/SKRYPTY/KROSNO/TypeScript/ProjektTS/PrzykladyTSReact/myreactapp/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from\"react\";import Footer from\"./footer\";import Header from\"./header\";import PersonDescription from\"./PersonDescription\";import SPersonList from\"./SPersonList\";import ReadPerson from\"./ReadPerson\";import DeletePerson from\"./DeletePerson\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";;;var DatabaseApp=/*#__PURE__*/function(_Component){_inherits(DatabaseApp,_Component);var _super=_createSuper(DatabaseApp);function DatabaseApp(props){var _this;_classCallCheck(this,DatabaseApp);_this=_super.call(this,props);_this.state={status:'OK',personList:new SPersonList()};_this.state.personList.build();//Wypełnienie poczatkowymi danymi     \n_this.addNewPerson=_this.addNewPerson.bind(_assertThisInitialized(_this));_this.deletePerson=_this.deletePerson.bind(_assertThisInitialized(_this));return _this;}_createClass(DatabaseApp,[{key:\"addNewPerson\",value:function addNewPerson(p){this.state.personList.add(p);this.setState(function(prevState){return{personList:prevState.personList,status:\"Dodano osobę\"};});}},{key:\"deletePerson\",value:function deletePerson(email){var result=this.state.personList.deletePerson(email);if(result){this.setState(function(prevState){return{personList:prevState.personList,status:\"Usunięto osobę \"+email};});}else{this.setState(function(prevState){return{status:\"Brak osoby \"+email};});}}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"Status: \",this.state.status]}),/*#__PURE__*/_jsx(\"h2\",{children:\"Aktualna lista os\\xF3b:\"}),this.state.personList.personList.map(function(lperson,index){return/*#__PURE__*/_jsx(PersonDescription,{email:lperson.email,firstname:lperson.firstname,lastname:lperson.lastname,age:lperson.age});}),/*#__PURE__*/_jsx(ReadPerson,{callback:this.addNewPerson}),/*#__PURE__*/_jsx(DeletePerson,{callback:this.deletePerson}),/*#__PURE__*/_jsx(Footer,{})]});}}]);return DatabaseApp;}(Component);export default DatabaseApp;","map":{"version":3,"names":["React","Component","Footer","Header","PersonDescription","SPersonList","ReadPerson","DeletePerson","DatabaseApp","props","state","status","personList","build","addNewPerson","bind","deletePerson","p","add","setState","prevState","email","result","map","lperson","index","firstname","lastname","age"],"sources":["C:/SKRYPTY/KROSNO/TypeScript/ProjektTS/PrzykladyTSReact/myreactapp/src/sdatabase/DatabaseApp.tsx"],"sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport Footer from \"./footer\";\r\nimport Header from \"./header\";\r\nimport PersonDescription from \"./PersonDescription\";\r\n\r\nimport  SPerson from \"./SPerson\"\r\nimport  SPersonList from \"./SPersonList\"\r\nimport  ReadPerson from \"./ReadPerson\"\r\nimport  DeletePerson from \"./DeletePerson\"\r\n\r\n\r\n\r\ninterface Props {\r\n};\r\n\r\ninterface State {\r\n    status: string;\r\n    personList: SPersonList;    \r\n};\r\n\r\n\r\nclass DatabaseApp extends Component<Props,State> {\r\n       \r\n    constructor(props : Props) {           \r\n        super(props);\r\n\r\n        this.state = { \r\n            status: 'OK',\r\n            personList: new SPersonList()            \r\n        }\r\n\r\n\r\n        this.state.personList.build();  //Wypełnienie poczatkowymi danymi     \r\n\r\n\r\n        this.addNewPerson = this.addNewPerson.bind(this);       \r\n        this.deletePerson = this.deletePerson.bind(this);     \r\n    }\r\n    \r\n    addNewPerson(p : SPerson) : void {\r\n\r\n        this.state.personList.add(p);\r\n                \r\n        this.setState((prevState) => ({\r\n            personList: prevState.personList,\r\n            status: \"Dodano osobę\"\r\n        }));  \r\n        \r\n        \r\n    }\r\n\r\n    deletePerson(email : string) : void {\r\n\r\n        let result : boolean = this.state.personList.deletePerson(email);\r\n               \r\n        if (result)\r\n        {\r\n            this.setState((prevState) => ({\r\n                personList: prevState.personList,\r\n                status: \"Usunięto osobę \"+email \r\n            }));\r\n        }\r\n        else{\r\n            this.setState((prevState) => ({                \r\n                status: \"Brak osoby \"+email \r\n            }));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            \r\n            <div>\r\n                <Header />\r\n\r\n                <h3>Status: {this.state.status}</h3>\r\n\r\n                <h2>Aktualna lista osób:</h2>\r\n                                \r\n                {this.state.personList.personList.map((lperson, index) => (                        \r\n                        <PersonDescription email={lperson.email} firstname={lperson.firstname} lastname={lperson.lastname} age={lperson.age}  />\r\n                ))}\r\n\r\n                <ReadPerson callback={this.addNewPerson}/>\r\n\r\n                <DeletePerson callback={this.deletePerson}/>\r\n        \r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    }\r\nexport default DatabaseApp;\r\n"],"mappings":"wvBAAA,MAAOA,MAAK,EAAIC,SAAS,KAAQ,OAAO,CAExC,MAAOC,OAAM,KAAM,UAAU,CAC7B,MAAOC,OAAM,KAAM,UAAU,CAC7B,MAAOC,kBAAiB,KAAM,qBAAqB,CAGnD,MAAQC,YAAW,KAAM,eAAe,CACxC,MAAQC,WAAU,KAAM,cAAc,CACtC,MAAQC,aAAY,KAAM,gBAAgB,yFAKzC,CAKA,CAAC,GAGIC,YAAW,0GAEb,qBAAYC,KAAa,CAAE,6CACvB,uBAAMA,KAAK,EAEX,MAAKC,KAAK,CAAG,CACTC,MAAM,CAAE,IAAI,CACZC,UAAU,CAAE,GAAIP,YAAW,EAC/B,CAAC,CAGD,MAAKK,KAAK,CAACE,UAAU,CAACC,KAAK,EAAE,CAAG;AAGhC,MAAKC,YAAY,CAAG,MAAKA,YAAY,CAACC,IAAI,+BAAM,CAChD,MAAKC,YAAY,CAAG,MAAKA,YAAY,CAACD,IAAI,+BAAM,CAAC,aACrD,CAAC,oDAED,sBAAaE,CAAW,CAAS,CAE7B,IAAI,CAACP,KAAK,CAACE,UAAU,CAACM,GAAG,CAACD,CAAC,CAAC,CAE5B,IAAI,CAACE,QAAQ,CAAC,SAACC,SAAS,QAAM,CAC1BR,UAAU,CAAEQ,SAAS,CAACR,UAAU,CAChCD,MAAM,CAAE,cACZ,CAAC,EAAC,CAAC,CAGP,CAAC,4BAED,sBAAaU,KAAc,CAAS,CAEhC,GAAIC,OAAgB,CAAG,IAAI,CAACZ,KAAK,CAACE,UAAU,CAACI,YAAY,CAACK,KAAK,CAAC,CAEhE,GAAIC,MAAM,CACV,CACI,IAAI,CAACH,QAAQ,CAAC,SAACC,SAAS,QAAM,CAC1BR,UAAU,CAAEQ,SAAS,CAACR,UAAU,CAChCD,MAAM,CAAE,iBAAiB,CAACU,KAC9B,CAAC,EAAC,CAAC,CACP,CAAC,IACG,CACA,IAAI,CAACF,QAAQ,CAAC,SAACC,SAAS,QAAM,CAC1BT,MAAM,CAAE,aAAa,CAACU,KAC1B,CAAC,EAAC,CAAC,CACP,CACJ,CAAC,sBAED,iBAAS,CACL,mBAEI,oCACI,KAAC,MAAM,IAAG,cAEV,iCAAa,IAAI,CAACX,KAAK,CAACC,MAAM,GAAM,cAEpC,+CAA6B,CAE5B,IAAI,CAACD,KAAK,CAACE,UAAU,CAACA,UAAU,CAACW,GAAG,CAAC,SAACC,OAAO,CAAEC,KAAK,qBAC7C,KAAC,iBAAiB,EAAC,KAAK,CAAED,OAAO,CAACH,KAAM,CAAC,SAAS,CAAEG,OAAO,CAACE,SAAU,CAAC,QAAQ,CAAEF,OAAO,CAACG,QAAS,CAAC,GAAG,CAAEH,OAAO,CAACI,GAAI,EAAI,EAC/H,CAAC,cAEF,KAAC,UAAU,EAAC,QAAQ,CAAE,IAAI,CAACd,YAAa,EAAE,cAE1C,KAAC,YAAY,EAAC,QAAQ,CAAE,IAAI,CAACE,YAAa,EAAE,cAE5C,KAAC,MAAM,IAAG,GACR,CAEd,CAAC,yBArEqBf,SAAS,EAwEnC,cAAeO,YAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}