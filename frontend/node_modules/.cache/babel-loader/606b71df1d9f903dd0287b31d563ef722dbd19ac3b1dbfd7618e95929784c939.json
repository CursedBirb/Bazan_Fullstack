{"ast":null,"code":"import SPerson from \"./SPerson\";\nclass SPersonList {\n  constructor() {\n    this.personList = void 0;\n    this.personList = [];\n  }\n  add(person) {\n    this.personList.push(person);\n  }\n  addPerson(email, firstname, lastname, age) {\n    let locPerson = new SPerson(email, firstname, lastname, age);\n    this.personList.push(locPerson);\n  }\n  get(index) {\n    return this.personList[index];\n  }\n  size() {\n    return this.personList.length;\n  }\n\n  //Utworzenie bazy poczatkowej os贸b\n  build() {\n    let p1 = new SPerson(\"jkowalski@gmail.com\", \"Jan\", \"Kowalski\", 35);\n    let p2 = new SPerson(\"mnowak@gmail.com\", \"Marek\", \"Nowak\", 46);\n    let p3 = new SPerson(\"awazna@gmail.com\", \"Anna\", \"Wazna\", 26);\n    this.add(p1);\n    this.add(p2);\n    this.add(p3);\n  }\n  deletePerson(email) {\n    if (this.size() > 0) {\n      //Przepisanie os贸b do nowej kolekcji\n\n      let locPersonList = [];\n      for (let i = 0; i < this.size(); i = i + 1) {\n        let person = this.get(i);\n        let locEmail = person.email;\n        if (locEmail != email) {\n          locPersonList.push(person);\n        }\n      }\n      this.personList = locPersonList;\n    }\n  }\n}\nexport default SPersonList;","map":{"version":3,"names":["SPerson","SPersonList","constructor","personList","add","person","push","addPerson","email","firstname","lastname","age","locPerson","get","index","size","length","build","p1","p2","p3","deletePerson","locPersonList","i","locEmail"],"sources":["C:/SKRYPTY/KROSNO/TypeScript/ProjektTS/PrzykladyTSReact/myreactapp/src/pdatabase/SPersonList.tsx"],"sourcesContent":["import  SPerson from \"./SPerson\"\r\n\r\nclass SPersonList{\r\n\r\n    public personList : SPerson[];\r\n    \r\n    constructor(){\r\n        this.personList = [];        \r\n    }\r\n\r\n    public add(person : SPerson) : void {\r\n        this.personList.push(person);\r\n    }\r\n\r\n    public addPerson(email : string, firstname: string, lastname : string, age : number) : void {\r\n        let locPerson = new SPerson(email, firstname, lastname, age);\r\n        this.personList.push(locPerson);\r\n    }\r\n\r\n   \r\n    public get(index : number) : SPerson {\r\n        return this.personList[index];\r\n    }\r\n\r\n    public size() : number {\r\n        return this.personList.length;\r\n    }\r\n\r\n\r\n    //Utworzenie bazy poczatkowej os贸b\r\n    public build() : void {\r\n        let p1 = new SPerson(\"jkowalski@gmail.com\",\"Jan\",\"Kowalski\",35);\r\n        let p2 = new SPerson(\"mnowak@gmail.com\",\"Marek\",\"Nowak\",46);\r\n        let p3 = new SPerson(\"awazna@gmail.com\",\"Anna\",\"Wazna\",26);      \r\n\r\n        this.add(p1);this.add(p2);this.add(p3);\r\n    }\r\n\r\n\r\n    public deletePerson(email : string) : void {\r\n\r\n        if (this.size()>0)\r\n        {\r\n\r\n            //Przepisanie os贸b do nowej kolekcji\r\n            \r\n            let locPersonList : SPerson[] = [];  \r\n\r\n            for (let i : number=0; i<this.size(); i=i+1)\r\n            {\r\n                let person = this.get(i);\r\n                let locEmail = person.email;\r\n                                \r\n                if (locEmail!=email){\r\n                    locPersonList.push(person);        \r\n                }\r\n            }            \r\n\r\n            this.personList = locPersonList;\r\n\r\n        }\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport default SPersonList;\r\n"],"mappings":"AAAA,OAAQA,OAAO,MAAM,WAAW;AAEhC,MAAMC,WAAW;EAIbC,WAAW,GAAE;IAAA,KAFNC,UAAU;IAGb,IAAI,CAACA,UAAU,GAAG,EAAE;EACxB;EAEOC,GAAG,CAACC,MAAgB,EAAS;IAChC,IAAI,CAACF,UAAU,CAACG,IAAI,CAACD,MAAM,CAAC;EAChC;EAEOE,SAAS,CAACC,KAAc,EAAEC,SAAiB,EAAEC,QAAiB,EAAEC,GAAY,EAAS;IACxF,IAAIC,SAAS,GAAG,IAAIZ,OAAO,CAACQ,KAAK,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,GAAG,CAAC;IAC5D,IAAI,CAACR,UAAU,CAACG,IAAI,CAACM,SAAS,CAAC;EACnC;EAGOC,GAAG,CAACC,KAAc,EAAY;IACjC,OAAO,IAAI,CAACX,UAAU,CAACW,KAAK,CAAC;EACjC;EAEOC,IAAI,GAAY;IACnB,OAAO,IAAI,CAACZ,UAAU,CAACa,MAAM;EACjC;;EAGA;EACOC,KAAK,GAAU;IAClB,IAAIC,EAAE,GAAG,IAAIlB,OAAO,CAAC,qBAAqB,EAAC,KAAK,EAAC,UAAU,EAAC,EAAE,CAAC;IAC/D,IAAImB,EAAE,GAAG,IAAInB,OAAO,CAAC,kBAAkB,EAAC,OAAO,EAAC,OAAO,EAAC,EAAE,CAAC;IAC3D,IAAIoB,EAAE,GAAG,IAAIpB,OAAO,CAAC,kBAAkB,EAAC,MAAM,EAAC,OAAO,EAAC,EAAE,CAAC;IAE1D,IAAI,CAACI,GAAG,CAACc,EAAE,CAAC;IAAC,IAAI,CAACd,GAAG,CAACe,EAAE,CAAC;IAAC,IAAI,CAACf,GAAG,CAACgB,EAAE,CAAC;EAC1C;EAGOC,YAAY,CAACb,KAAc,EAAS;IAEvC,IAAI,IAAI,CAACO,IAAI,EAAE,GAAC,CAAC,EACjB;MAEI;;MAEA,IAAIO,aAAyB,GAAG,EAAE;MAElC,KAAK,IAAIC,CAAU,GAAC,CAAC,EAAEA,CAAC,GAAC,IAAI,CAACR,IAAI,EAAE,EAAEQ,CAAC,GAACA,CAAC,GAAC,CAAC,EAC3C;QACI,IAAIlB,MAAM,GAAG,IAAI,CAACQ,GAAG,CAACU,CAAC,CAAC;QACxB,IAAIC,QAAQ,GAAGnB,MAAM,CAACG,KAAK;QAE3B,IAAIgB,QAAQ,IAAEhB,KAAK,EAAC;UAChBc,aAAa,CAAChB,IAAI,CAACD,MAAM,CAAC;QAC9B;MACJ;MAEA,IAAI,CAACF,UAAU,GAAGmB,aAAa;IAEnC;EAEJ;AAEJ;AAEA,eAAerB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}