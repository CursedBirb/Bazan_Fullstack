{"ast":null,"code":"import SBookHook from \"./SBookHook\";\n\n//Kolekcja książek\nclass SBookListHook {\n  constructor() {\n    this.books = [];\n  }\n  add(book) {\n    this.books.push(book);\n  }\n  get(index) {\n    return this.books[index];\n  }\n  size() {\n    return this.books.length;\n  }\n  remove(index) {\n    if (index >= 0 && index < this.books.length) {\n      this.books.splice(index, 1);\n    }\n  }\n  getCopy() {\n    let locBookList = new SBookList();\n    if (this.size() > 0) {\n      for (let i = 0; i < this.size(); i = i + 1) {\n        let book = this.get(i);\n        locBookList.add(book);\n      }\n    }\n    return locBookList;\n  }\n\n  //Utworzenie bazy poczatkowej ksiazek\n  build() {\n    let b1 = new SBookKook(\"Hobbittt\", \"Tolkien\", \"455\");\n    let b2 = new SBookKook(\"Rok 1984\", \"Orwell\", \"455\");\n    let b3 = new SBookKook(\"Władca Pierścieni\", \"Tolkien\", \"669\");\n    let b4 = new SBookKook(\"Stary człowiek i morze\", \"Hemingway\", \"226\");\n    this.add(b1);\n    this.add(b2);\n    this.add(b3);\n    this.add(b4);\n  }\n\n  //Selekcja książek o ustalonym kryterium wyboru\n  selectBooks() {\n    if (this.size() > 0) {\n      let nbooks = [];\n      for (let i = 0; i < this.size(); i = i + 1) {\n        let book = this.get(i);\n        let author = book.author;\n        if (author == \"Tolkien\") {\n          nbooks.push(book);\n        }\n      }\n      this.books = nbooks;\n    }\n  }\n\n  //Filtracja książek z dynamicznie podanym tekstem, który szukamy opisie\n  filtrBooks(filtrText) {\n    if (this.size() > 0) {\n      let filter = filtrText.toUpperCase();\n      let nbooks = [];\n      for (let i = 0; i < this.size(); i = i + 1) {\n        let book = this.get(i);\n        let author = book.author;\n        let title = book.title;\n        let text = author + \" \" + title;\n        text = text.toUpperCase();\n        if (text.includes(filter)) {\n          nbooks.push(book);\n        }\n      }\n      this.books = nbooks;\n    }\n  }\n\n  //Dodanie ustalonej ksiazki\n  addBook() {\n    let b = new SBook(\"Pan Tadeusz\", \"Mickiewicz\", \"345\");\n    this.add(b);\n  }\n}\nexport default SBookListHook;","map":{"version":3,"names":["SBookHook","SBookListHook","constructor","books","add","book","push","get","index","size","length","remove","splice","getCopy","locBookList","SBookList","i","build","b1","SBookKook","b2","b3","b4","selectBooks","nbooks","author","filtrBooks","filtrText","filter","toUpperCase","title","text","includes","addBook","b","SBook"],"sources":["C:/SKRYPTY/KROSNO/Modern programming techniques/DRUGI_SEMESTR_2023/JavaScript2023/PrzykladyJSReact2023/myreactapp/src/bookshook/SBookListHook.js"],"sourcesContent":["import  SBookHook from \"./SBookHook\"\r\n\r\n//Kolekcja książek\r\nclass SBookListHook{\r\n    \r\n    constructor(){\r\n        this.books = [];        \r\n    }\r\n\r\n    add(book) {\r\n        this.books.push(book);\r\n    }\r\n\r\n    get(index) {\r\n        return this.books[index];\r\n    }\r\n\r\n    size() {\r\n        return this.books.length;\r\n    }\r\n\r\n    remove(index) {\r\n\r\n        if ((index >=0)&&(index<this.books.length)) {\r\n            this.books.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    getCopy() {\r\n\r\n        let locBookList = new SBookList();\r\n\r\n        if (this.size()>0)\r\n        {\r\n            for (let i=0; i<this.size(); i=i+1)\r\n            {\r\n                let book = this.get(i);\r\n                locBookList.add(book);                \r\n            }            \r\n        }\r\n\r\n        return locBookList;\r\n    }\r\n\r\n    //Utworzenie bazy poczatkowej ksiazek\r\n    build() {\r\n        let b1 = new SBookKook(\"Hobbittt\",\"Tolkien\",\"455\");\r\n        let b2 = new SBookKook(\"Rok 1984\",\"Orwell\",\"455\");\r\n        let b3 = new SBookKook(\"Władca Pierścieni\",\"Tolkien\",\"669\");\r\n        let b4 = new SBookKook(\"Stary człowiek i morze\",\"Hemingway\",\"226\");\r\n\r\n        this.add(b1);this.add(b2);this.add(b3);this.add(b4);\r\n    }\r\n\r\n    //Selekcja książek o ustalonym kryterium wyboru\r\n    selectBooks() {\r\n\r\n        if (this.size()>0)\r\n        {\r\n\r\n            let nbooks = [];  \r\n\r\n            for (let i=0; i<this.size(); i=i+1)\r\n            {\r\n                let book = this.get(i);\r\n                let author = book.author;\r\n                \r\n                if (author==\"Tolkien\"){\r\n                    nbooks.push(book);        \r\n                }\r\n            }            \r\n\r\n            this.books = nbooks;\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    //Filtracja książek z dynamicznie podanym tekstem, który szukamy opisie\r\n    filtrBooks(filtrText) {\r\n        if (this.size()>0)\r\n        {\r\n\r\n            let filter = filtrText.toUpperCase();\r\n\r\n            let nbooks  = [];  \r\n\r\n            for (let i=0; i<this.size(); i=i+1)\r\n            {\r\n                let book = this.get(i);\r\n                let author = book.author;\r\n                let title = book.title;\r\n                let text = author + \" \" + title;\r\n                text = text.toUpperCase();\r\n\r\n                if (text.includes(filter))\r\n                {\r\n                    nbooks.push(book);        \r\n                }\r\n            }            \r\n\r\n            this.books = nbooks;\r\n        }\r\n        \r\n    }\r\n\r\n    //Dodanie ustalonej ksiazki\r\n    addBook() {\r\n\r\n        let b = new SBook(\"Pan Tadeusz\",\"Mickiewicz\",\"345\");        \r\n        this.add(b);\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default SBookListHook;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}