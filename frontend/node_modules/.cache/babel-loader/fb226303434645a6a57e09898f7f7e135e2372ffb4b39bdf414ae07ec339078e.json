{"ast":null,"code":"var _jsxFileName = \"C:\\\\BazanFullStack\\\\frontend\\\\src\\\\components\\\\GetHiraganaRomajiAndImage.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useEffect, useState } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GetHiraganaRomajiAndImage() {\n  _s();\n  const backendUrl = 'http://localhost:8081';\n  const [targetNumberOfLetter, setTargetNumberOfLetter] = useState('1');\n  const [status, setStatus] = useState(\"OK\");\n  const [image, setImage] = useState(\"Brak Zdjęcia\");\n  const [romaji, setRomaji] = useState(\"Brak Litery\");\n  async function getRecordById(targetNumberOfLetter) {\n    await axios.post(`${backendUrl}/api/v1/gethiraganarecord/`).then(response => {\n      //let idFound = false; // Dodane, aby śledzić, czy użytkownik został znaleziony\n      let hiraganaRomajiName = \"\";\n      let hiraganaImage = \"\";\n      response.data.forEach(e => {\n        let lid = e.id;\n        let lhiraganaRomaji = e.hiraganaRomaji;\n        let lhiraganaImage = e.hiraganaImage;\n        let firstPartText = lhiraganaRomaji.substring(0, \"ERROR:\".length);\n        if (firstPartText !== \"ERROR:\" && parseInt(lid, 10) === parseInt(targetNumberOfLetter, 10)) {\n          hiraganaRomajiName = `${lhiraganaRomaji}\\n`;\n          hiraganaImage = `${lhiraganaImage}\\n`;\n          setStatus(\"OK\");\n          //idFound = true;\n        } else if (firstPartText === \"ERROR:\" && parseInt(lid, 10) === parseInt(targetNumberOfLetter, 10)) {\n          let secondPartText = lhiraganaRomaji.substring(\"ERROR:\".length, lhiraganaRomaji.length);\n          setStatus(secondPartText);\n          //idFound = true;\n        }\n      });\n\n      //if (!idFound) {\n      //setStatus(\"Id nie znaleziono\");\n      //}\n\n      setRomaji(hiraganaRomajiName);\n      setImage(hiraganaImage);\n    }).catch(err => {\n      let myerror = \"Błąd połączenia sieciowego.\" + err;\n      setStatus(myerror);\n    });\n  }\n\n  // Wywołanie funkcji z konkretnym username (np. 'john_doe')\n\n  function incrementTarget() {\n    targetNumberOfLetter++;\n    getRecordById(targetNumberOfLetter);\n  }\n  useEffect(() => {\n    getRecordById(targetNumberOfLetter);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: incrementTarget,\n      children: \"Pobierz Wynik\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: romaji\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: incrementTarget,\n        children: \"  Odczytaj aktualn\\u0105 list\\u0119 przelew\\xF3w  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"textarea\",\n        rows: 8,\n        type: \"text\",\n        value: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n_s(GetHiraganaRomajiAndImage, \"7eZvySlWXb2OcHZBlmj5TZT2QfM=\");\n_c = GetHiraganaRomajiAndImage;\nvar _c;\n$RefreshReg$(_c, \"GetHiraganaRomajiAndImage\");","map":{"version":3,"names":["axios","React","useEffect","useState","Button","Container","Form","GetHiraganaRomajiAndImage","backendUrl","targetNumberOfLetter","setTargetNumberOfLetter","status","setStatus","image","setImage","romaji","setRomaji","getRecordById","post","then","response","hiraganaRomajiName","hiraganaImage","data","forEach","e","lid","id","lhiraganaRomaji","hiraganaRomaji","lhiraganaImage","firstPartText","substring","length","parseInt","secondPartText","catch","err","myerror","incrementTarget"],"sources":["C:/BazanFullStack/frontend/src/components/GetHiraganaRomajiAndImage.js"],"sourcesContent":["import axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useEffect, useState } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\n\nexport default function GetHiraganaRomajiAndImage() {\n\n    const backendUrl = 'http://localhost:8081';\n    const [targetNumberOfLetter, setTargetNumberOfLetter] = useState('1');\n    const [status, setStatus] = useState(\"OK\");\n    const [image, setImage] = useState(\"Brak Zdjęcia\");\n    const [romaji, setRomaji] = useState(\"Brak Litery\");\n\n    async function getRecordById(targetNumberOfLetter) {\n        await axios.post(`${backendUrl}/api/v1/gethiraganarecord/`)\n            .then(response => {\n                //let idFound = false; // Dodane, aby śledzić, czy użytkownik został znaleziony\n                let hiraganaRomajiName = \"\";\n                let hiraganaImage = \"\";\n    \n                response.data.forEach((e) => {\n                    let lid = e.id;\n                    let lhiraganaRomaji = e.hiraganaRomaji;\n                    let lhiraganaImage = e.hiraganaImage;\n\n                    let firstPartText = lhiraganaRomaji.substring(0, (\"ERROR:\").length);\n    \n                    if (firstPartText !== \"ERROR:\" && parseInt(lid, 10) === parseInt(targetNumberOfLetter, 10)) {\n                        hiraganaRomajiName = `${lhiraganaRomaji}\\n`;\n                        hiraganaImage = `${lhiraganaImage}\\n`;\n                        setStatus(\"OK\");\n                        //idFound = true;\n                    } else if (firstPartText === \"ERROR:\" && parseInt(lid, 10) === parseInt(targetNumberOfLetter, 10)) {\n                        let secondPartText = lhiraganaRomaji.substring((\"ERROR:\").length, lhiraganaRomaji.length);\n                        setStatus(secondPartText);\n                        //idFound = true;\n                    }\n                });\n    \n                //if (!idFound) {\n                    //setStatus(\"Id nie znaleziono\");\n                //}\n            \n                setRomaji(hiraganaRomajiName);\n                setImage(hiraganaImage);\n            \n            })\n            .catch(err => {\n                let myerror = \"Błąd połączenia sieciowego.\" + err;\n                setStatus(myerror);\n            });\n    }\n    \n    // Wywołanie funkcji z konkretnym username (np. 'john_doe')\n\n    function incrementTarget() {\n\n        targetNumberOfLetter++;\n        getRecordById(targetNumberOfLetter);\n\n    }\n\n    useEffect(() => {\n\n        getRecordById(targetNumberOfLetter);\n\n    }, []);\n\n    return (\n\n        <div>\n\n            <button onClick={incrementTarget}>Pobierz Wynik</button>\n\n            <p>{status}</p>\n            <p>{romaji}</p>\n            <p>{image}</p>\n\n            <Container>\n\n                <Button variant=\"primary\" onClick={incrementTarget}>  Odczytaj aktualną listę przelewów  </Button>\n\n                <Form.Control as=\"textarea\" rows={8} type=\"text\" value={image} />\n\n            </Container>\n\n        </div>\n\n    );\n    \n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}