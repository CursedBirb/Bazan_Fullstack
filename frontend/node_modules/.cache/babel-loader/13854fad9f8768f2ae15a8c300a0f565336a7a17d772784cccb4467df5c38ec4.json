{"ast":null,"code":"var _jsxFileName = \"C:\\\\SKRYPTY\\\\KROSNO\\\\Modern programming techniques\\\\DRUGI_SEMESTR_2023\\\\JavaScript2023\\\\PrzykladyJSReact2023\\\\myreactapp\\\\src\\\\restbank\\\\REST_NOAUTH_BankTrans.js\";\nimport React, { Component, FormEvent, ChangeEvent, MouseEvent } from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\n\n//Klient dostępu do przelewów w banku na serwerze z użyciem usług REST bez autoryzacji\n//Lokalizacja bazy: http://localhost:8081/\n//W celu przetestowania klienta należy uruchomić serwer wykonany za pomoca Sprint Boot w języku Java (WEBSERVICE BANK NO AUTH)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass BankTransNoAuth extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: 'OK',\n      textArea: \"Brak danych\",\n      newClientname: \"nowak\",\n      newDate: \"2022-10-30\",\n      newDescription: \"Zakup USD\",\n      newAmount: \"345.1\",\n      transferIDToDelete: \"1\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.getTransfers = this.getTransfers.bind(this);\n    this.addTransfer = this.addTransfer.bind(this);\n    this.deleteTransfer = this.deleteTransfer.bind(this);\n  }\n\n  //Dodanie przelewu na serwer\n  async addTransfer() {\n    let clientname = this.state.newClientname;\n    let date = this.state.newDate;\n    let description = this.state.newDescription;\n    let amount = this.state.newAmount;\n    if (clientname.length > 0 && date.length > 0 && description.length > 0 && amount.length > 0) {\n      await axios.post('http://localhost:8081/addtransfer/', {\n        clientname,\n        date,\n        description,\n        amount\n      } //Podajemy parametry\n      ).then(response => {\n        let text = response.data;\n        this.setState({\n          status: text\n        });\n      }).catch(err => {\n        let myerror = \"Błąd połaczenia sieciowego.\" + err;\n        this.setState({\n          status: myerror\n        });\n      });\n    } else {\n      this.setState({\n        status: \"Żadna z danych wstawianego przelewu nie może być pusta\"\n      });\n    }\n  }\n\n  //Pobranie listy przelewow z serwera\n  async getTransfers() {\n    await axios.post('http://localhost:8081/gettransfers/').then(response => {\n      let transferListText = \"\";\n      response.data.forEach(e => {\n        let lid = e.id;\n        let lclientname = e.clientname;\n        let ldate = e.date;\n        let ldescription = e.description;\n        let lamount = e.amount;\n        let firstPartText = lclientname.substring(0, \"ERROR:\".length);\n        if (firstPartText !== \"ERROR:\") {\n          transferListText = transferListText + lid + \", \" + lclientname + \", \" + ldate + \", \" + ldescription + \", \" + lamount + \"\\n\";\n          this.setState({\n            textArea: transferListText,\n            status: \"OK\"\n          });\n        } else {\n          let secondPartText = lclientname.substring(\"ERROR:\".length, lclientname.length);\n          transferListText = lclientname + \"\\n\";\n          this.setState({\n            textArea: transferListText,\n            status: secondPartText\n          });\n        }\n      });\n    }).catch(err => {\n      let myerror = \"Błąd połaczenia sieciowego.\" + err;\n      this.setState({\n        status: myerror\n      });\n    });\n  }\n  async deleteTransfer() {\n    let transferidtodelete = this.state.transferIDToDelete;\n    if (transferidtodelete.length > 0) {\n      await axios.post('http://localhost:8081/deletetransfer/', {\n        transferidtodelete\n      } //Podajemy parametr\n      ).then(response => {\n        let text = response.data;\n        this.setState({\n          status: text\n        });\n      }).catch(err => {\n        let myerror = \"Błąd połaczenia sieciowego.\" + err;\n        this.setState({\n          status: myerror\n        });\n      });\n    } else {\n      this.setState({\n        status: \"ID przelewu nie może być puste\"\n      });\n    }\n  }\n  handleChange(evt) {\n    const name = evt.target.name;\n    if (name === \"newClientname\") this.setState({\n      newClientname: evt.target.value\n    });\n    if (name === \"newDate\") this.setState({\n      newDate: evt.target.value\n    });\n    if (name === \"newDescription\") this.setState({\n      newDescription: evt.target.value\n    });\n    if (name === \"newAmount\") this.setState({\n      newAmount: evt.target.value\n    });\n    if (name === \"transferIDToDelete\") this.setState({\n      transferIDToDelete: evt.target.value\n    });\n  }\n  handleSubmit(event) {\n    this.addTransfer();\n    event.preventDefault(); //Dla zapobiegniecia ponownemu załadowaniu/odświeżeniu przeglądarki\n  }\n\n  //-----------------------------------------------\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Klient dost\\u0119pu do przelew\\xF3w w banku z u\\u017Cyciem REST (bez autoryzacji, CLASS) \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), \"Lokalizacja bazy: http://localhost:8081/\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Status: \", this.state.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \" Dane nowego przelewu: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"auto\",\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: [\" Klient: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"newClientname\",\n              value: this.state.newClientname,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 34\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), ' ', /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: [\" Data przelewu: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"newDate\",\n              value: this.state.newDate,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 41\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), ' ', /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: [\" Opis przelewu:: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"newDescription\",\n              value: this.state.newDescription,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 42\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), ' ', /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: [\" Kwota: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"newAmount\",\n              value: this.state.newAmount,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 33\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"  Dodaj  \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"auto\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [\" Podaj id przelewu do usuni\\u0119cia: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"transferIDToDelete\",\n            value: this.state.transferIDToDelete,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 56\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: this.deleteTransfer,\n          children: \"  Usu\\u0144  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: this.getTransfers,\n        children: \"  Odczytaj aktualn\\u0105 list\\u0119 przelew\\xF3w  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"textarea\",\n        rows: 8,\n        type: \"text\",\n        value: this.state.textArea,\n        placeholder: \"\",\n        onChange: this.handleChange,\n        spellCheck: \"false\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default BankTransNoAuth;","map":{"version":3,"names":["React","Component","FormEvent","ChangeEvent","MouseEvent","Container","Form","Button","Alert","axios","BankTransNoAuth","constructor","props","state","status","textArea","newClientname","newDate","newDescription","newAmount","transferIDToDelete","handleSubmit","bind","handleChange","getTransfers","addTransfer","deleteTransfer","clientname","date","description","amount","length","post","then","response","text","data","setState","catch","err","myerror","transferListText","forEach","e","lid","id","lclientname","ldate","ldescription","lamount","firstPartText","substring","secondPartText","transferidtodelete","evt","name","target","value","event","preventDefault","render"],"sources":["C:/SKRYPTY/KROSNO/Modern programming techniques/DRUGI_SEMESTR_2023/JavaScript2023/PrzykladyJSReact2023/myreactapp/src/restbank/REST_NOAUTH_BankTrans.js"],"sourcesContent":["import React, { Component, FormEvent, ChangeEvent, MouseEvent } from \"react\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\n\r\n\r\n//Klient dostępu do przelewów w banku na serwerze z użyciem usług REST bez autoryzacji\r\n//Lokalizacja bazy: http://localhost:8081/\r\n//W celu przetestowania klienta należy uruchomić serwer wykonany za pomoca Sprint Boot w języku Java (WEBSERVICE BANK NO AUTH)\r\n\r\n\r\nclass BankTransNoAuth extends Component\r\n{\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      status: 'OK', textArea: \"Brak danych\",\r\n      newClientname: \"nowak\", newDate: \"2022-10-30\", newDescription: \"Zakup USD\", newAmount: \"345.1\",  \r\n      transferIDToDelete: \"1\"          \r\n    };\r\n\r\n    \r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.getTransfers = this.getTransfers.bind(this);\r\n    this.addTransfer = this.addTransfer.bind(this);\r\n    this.deleteTransfer = this.deleteTransfer.bind(this);\r\n            \r\n  }\r\n\r\n\r\n\r\n  //Dodanie przelewu na serwer\r\n  async addTransfer() {\r\n    let clientname = this.state.newClientname;\r\n    let date = this.state.newDate;\r\n    let description = this.state.newDescription;\r\n    let amount = this.state.newAmount;\r\n    \r\n    \r\n    if ((clientname.length > 0) && (date.length > 0) && (description.length > 0) && (amount.length>0)) {\r\n      await axios.post('http://localhost:8081/addtransfer/',\r\n        { clientname, date, description, amount }, //Podajemy parametry\r\n      )\r\n        .then(response => {\r\n          let text = response.data;\r\n          this.setState({ status: text });\r\n        }).catch(err => {\r\n          let myerror = \"Błąd połaczenia sieciowego.\" + err;\r\n          this.setState({ status: myerror });\r\n        });\r\n    }\r\n    else {\r\n      this.setState({ status: \"Żadna z danych wstawianego przelewu nie może być pusta\" });\r\n    }\r\n  }\r\n\r\n  \r\n  //Pobranie listy przelewow z serwera\r\n  async getTransfers() {\r\n\r\n    \r\n    await axios.post('http://localhost:8081/gettransfers/')\r\n      .then(response => {\r\n        \r\n        let transferListText = \"\"\r\n\r\n        response.data.forEach((e) => {\r\n            let lid = e.id; \r\n            let lclientname = e.clientname; let ldate = e.date; let ldescription = e.description; let lamount = e.amount;\r\n\r\n          let firstPartText = lclientname.substring(0, (\"ERROR:\").length);\r\n\r\n\r\n          if (firstPartText !== \"ERROR:\") {\r\n            transferListText = transferListText + lid + \", \" + lclientname + \", \" + ldate + \", \" + ldescription + \", \" + lamount + \"\\n\";\r\n            this.setState({ textArea: transferListText, status: \"OK\" });\r\n          }\r\n          else {\r\n            let secondPartText = lclientname.substring((\"ERROR:\").length, lclientname.length);\r\n            transferListText = lclientname + \"\\n\";\r\n            this.setState({ textArea: transferListText, status: secondPartText });\r\n          }\r\n        })\r\n\r\n      }).catch(err => {\r\n\r\n        let myerror = \"Błąd połaczenia sieciowego.\" + err;\r\n        this.setState({ status: myerror });\r\n      });\r\n\r\n  }\r\n\r\n\r\n  async deleteTransfer() {\r\n    \r\n    let transferidtodelete = this.state.transferIDToDelete;\r\n\r\n    if (transferidtodelete.length > 0) {\r\n\r\n      await axios.post('http://localhost:8081/deletetransfer/',\r\n        { transferidtodelete }, //Podajemy parametr\r\n      )\r\n        .then(response => {\r\n          let text = response.data;\r\n          this.setState({ status: text });\r\n        }).catch(err => {\r\n          let myerror = \"Błąd połaczenia sieciowego.\" + err;\r\n          this.setState({ status: myerror });\r\n        });\r\n    }\r\n    else {\r\n      this.setState({ status: \"ID przelewu nie może być puste\" });\r\n    }\r\n  }\r\n\r\n\r\n\r\n  handleChange(evt) {\r\n\r\n    const name = evt.target.name;\r\n    \r\n    if (name === \"newClientname\") this.setState({ newClientname: evt.target.value });\r\n    if (name === \"newDate\") this.setState({ newDate: evt.target.value });\r\n    if (name === \"newDescription\") this.setState({ newDescription: evt.target.value });\r\n    if (name === \"newAmount\") this.setState({ newAmount: evt.target.value });\r\n    if (name === \"transferIDToDelete\") this.setState({ transferIDToDelete: evt.target.value });\r\n    \r\n  }\r\n\r\n  handleSubmit(event) {\r\n\r\n    this.addTransfer();\r\n    event.preventDefault(); //Dla zapobiegniecia ponownemu załadowaniu/odświeżeniu przeglądarki\r\n  }\r\n\r\n\r\n  //-----------------------------------------------\r\n\r\n\r\n  render() {\r\n    return (\r\n\r\n      <Container>\r\n\r\n        <Alert variant=\"info\">\r\n          <Alert.Heading><strong>Klient dostępu do przelewów w banku z użyciem REST (bez autoryzacji, CLASS) </strong></Alert.Heading>\r\n          Lokalizacja bazy: http://localhost:8081/\r\n        </Alert>\r\n\r\n        <p></p>\r\n\r\n        <h3>Status: {this.state.status}</h3>\r\n\r\n        <p></p>\r\n\r\n        <Form.Label> Dane nowego przelewu: </Form.Label>\r\n\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Group className=\"auto\" onSubmit={this.handleSubmit}>\r\n            <Form.Label> Klient: <input type=\"text\" name='newClientname' value={this.state.newClientname} onChange={this.handleChange} /> </Form.Label>\r\n            {' '}\r\n            <Form.Label> Data przelewu: <input type=\"text\" name='newDate' value={this.state.newDate} onChange={this.handleChange} /> </Form.Label>\r\n            {' '}\r\n            <Form.Label> Opis przelewu:: <input type=\"text\" name='newDescription' value={this.state.newDescription} onChange={this.handleChange} /> </Form.Label>\r\n            {' '}\r\n            <Form.Label> Kwota: <input type=\"text\" name='newAmount' value={this.state.newAmount} onChange={this.handleChange} /> </Form.Label>\r\n            {' '}\r\n            <Button variant=\"primary\" type=\"submit\">  Dodaj  </Button>\r\n          </Form.Group>\r\n          <p></p>\r\n        </Form >\r\n\r\n        <Form.Group className=\"auto\" onSubmit={this.handleSubmit}>\r\n          <Form.Label> Podaj id przelewu do usunięcia: <input type=\"text\" name='transferIDToDelete' value={this.state.transferIDToDelete} onChange={this.handleChange} /> </Form.Label>\r\n          {' '}\r\n          <Button variant=\"primary\" onClick={this.deleteTransfer}>  Usuń  </Button>\r\n        </Form.Group>\r\n\r\n        <p></p>\r\n        \r\n\r\n        <Button variant=\"primary\" onClick={this.getTransfers}>  Odczytaj aktualną listę przelewów  </Button>\r\n\r\n        <p></p>\r\n\r\n        <Form.Control as=\"textarea\" rows={8} type=\"text\" value={this.state.textArea} placeholder=\"\" onChange={this.handleChange} spellCheck=\"false\" />\r\n\r\n        <p></p>\r\n\r\n       \r\n      </Container>\r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default BankTransNoAuth;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}