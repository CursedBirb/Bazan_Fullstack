{"ast":null,"code":"var _jsxFileName = \"C:\\\\SKRYPTY\\\\KROSNO\\\\TypeScript\\\\ProjektTS\\\\PrzykladyTSReact\\\\myreactapp\\\\src\\\\sdatabase\\\\DatabaseApp.tsx\";\nimport React, { Component } from \"react\";\nimport Footer from \"./footer\";\nimport Header from \"./header\";\nimport PersonDescription from \"./PersonDescription\";\nimport SPersonList from \"./SPersonList\";\nimport ReadPerson from \"./ReadPerson\";\nimport DeletePerson from \"./DeletePerson\";\n\n//Implementacja bazy danych osób w pamieci (bez REST) \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\n;\nclass DatabaseApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: 'OK',\n      personList: new SPersonList()\n    };\n    this.state.personList.build(); //Wypełnienie poczatkowymi danymi     \n\n    this.addNewPerson = this.addNewPerson.bind(this);\n    this.deletePerson = this.deletePerson.bind(this);\n  }\n  addNewPerson(p) {\n    this.state.personList.add(p);\n    this.setState(prevState => ({\n      personList: prevState.personList,\n      status: \"Dodano osobę\"\n    }));\n  }\n  deletePerson(email) {\n    let result = this.state.personList.deletePerson(email);\n    if (result) {\n      this.setState(prevState => ({\n        personList: prevState.personList,\n        status: \"Usunięto osobę \" + email\n      }));\n    } else {\n      this.setState(prevState => ({\n        status: \"Brak osoby \" + email\n      }));\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Status: \", this.state.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Aktualna lista os\\xF3b:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), this.state.personList.personList.map((lperson, index) => /*#__PURE__*/_jsxDEV(PersonDescription, {\n        email: lperson.email,\n        firstname: lperson.firstname,\n        lastname: lperson.lastname,\n        age: lperson.age\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(ReadPerson, {\n        callback: this.addNewPerson\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DeletePerson, {\n        callback: this.deletePerson\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default DatabaseApp;","map":{"version":3,"names":["React","Component","Footer","Header","PersonDescription","SPersonList","ReadPerson","DeletePerson","DatabaseApp","constructor","props","state","status","personList","build","addNewPerson","bind","deletePerson","p","add","setState","prevState","email","result","render","map","lperson","index","firstname","lastname","age"],"sources":["C:/SKRYPTY/KROSNO/TypeScript/ProjektTS/PrzykladyTSReact/myreactapp/src/sdatabase/DatabaseApp.tsx"],"sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport Footer from \"./footer\";\r\nimport Header from \"./header\";\r\nimport PersonDescription from \"./PersonDescription\";\r\n\r\nimport  SPerson from \"./SPerson\"\r\nimport  SPersonList from \"./SPersonList\"\r\nimport  ReadPerson from \"./ReadPerson\"\r\nimport  DeletePerson from \"./DeletePerson\"\r\n\r\n//Implementacja bazy danych osób w pamieci (bez REST) \r\n\r\ninterface Props {\r\n};\r\n\r\ninterface State {\r\n    status: string;\r\n    personList: SPersonList;    \r\n};\r\n\r\n\r\nclass DatabaseApp extends Component<Props,State> {\r\n       \r\n    constructor(props : Props) {           \r\n        super(props);\r\n\r\n        this.state = { \r\n            status: 'OK',\r\n            personList: new SPersonList()            \r\n        }\r\n\r\n\r\n        this.state.personList.build();  //Wypełnienie poczatkowymi danymi     \r\n\r\n\r\n        this.addNewPerson = this.addNewPerson.bind(this);       \r\n        this.deletePerson = this.deletePerson.bind(this);     \r\n    }\r\n    \r\n    addNewPerson(p : SPerson) : void {\r\n\r\n        this.state.personList.add(p);\r\n                \r\n        this.setState((prevState) => ({\r\n            personList: prevState.personList,\r\n            status: \"Dodano osobę\"\r\n        }));  \r\n        \r\n        \r\n    }\r\n\r\n    deletePerson(email : string) : void {\r\n\r\n        let result : boolean = this.state.personList.deletePerson(email);\r\n               \r\n        if (result)\r\n        {\r\n            this.setState((prevState) => ({\r\n                personList: prevState.personList,\r\n                status: \"Usunięto osobę \"+email \r\n            }));\r\n        }\r\n        else{\r\n            this.setState((prevState) => ({                \r\n                status: \"Brak osoby \"+email \r\n            }));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            \r\n            <div>\r\n                <Header />\r\n\r\n                <h3>Status: {this.state.status}</h3>\r\n\r\n                <h2>Aktualna lista osób:</h2>\r\n                                \r\n                {this.state.personList.personList.map((lperson, index) => (                        \r\n                        <PersonDescription email={lperson.email} firstname={lperson.firstname} lastname={lperson.lastname} age={lperson.age}  />\r\n                ))}\r\n\r\n                <ReadPerson callback={this.addNewPerson}/>\r\n\r\n                <DeletePerson callback={this.deletePerson}/>\r\n        \r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    }\r\nexport default DatabaseApp;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAExC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,iBAAiB,MAAM,qBAAqB;AAGnD,OAAQC,WAAW,MAAM,eAAe;AACxC,OAAQC,UAAU,MAAM,cAAc;AACtC,OAAQC,YAAY,MAAM,gBAAgB;;AAE1C;AAAA;AAGC;AAKA;AAGD,MAAMC,WAAW,SAASP,SAAS,CAAc;EAE7CQ,WAAW,CAACC,KAAa,EAAE;IACvB,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,KAAK,GAAG;MACTC,MAAM,EAAE,IAAI;MACZC,UAAU,EAAE,IAAIR,WAAW;IAC/B,CAAC;IAGD,IAAI,CAACM,KAAK,CAACE,UAAU,CAACC,KAAK,EAAE,CAAC,CAAE;;IAGhC,IAAI,CAACC,YAAY,GAAG,IAAI,CAACA,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC;IAChD,IAAI,CAACC,YAAY,GAAG,IAAI,CAACA,YAAY,CAACD,IAAI,CAAC,IAAI,CAAC;EACpD;EAEAD,YAAY,CAACG,CAAW,EAAS;IAE7B,IAAI,CAACP,KAAK,CAACE,UAAU,CAACM,GAAG,CAACD,CAAC,CAAC;IAE5B,IAAI,CAACE,QAAQ,CAAEC,SAAS,KAAM;MAC1BR,UAAU,EAAEQ,SAAS,CAACR,UAAU;MAChCD,MAAM,EAAE;IACZ,CAAC,CAAC,CAAC;EAGP;EAEAK,YAAY,CAACK,KAAc,EAAS;IAEhC,IAAIC,MAAgB,GAAG,IAAI,CAACZ,KAAK,CAACE,UAAU,CAACI,YAAY,CAACK,KAAK,CAAC;IAEhE,IAAIC,MAAM,EACV;MACI,IAAI,CAACH,QAAQ,CAAEC,SAAS,KAAM;QAC1BR,UAAU,EAAEQ,SAAS,CAACR,UAAU;QAChCD,MAAM,EAAE,iBAAiB,GAACU;MAC9B,CAAC,CAAC,CAAC;IACP,CAAC,MACG;MACA,IAAI,CAACF,QAAQ,CAAEC,SAAS,KAAM;QAC1BT,MAAM,EAAE,aAAa,GAACU;MAC1B,CAAC,CAAC,CAAC;IACP;EACJ;EAEAE,MAAM,GAAG;IACL,oBAEI;MAAA,wBACI,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eAEV;QAAA,uBAAa,IAAI,CAACb,KAAK,CAACC,MAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,eAEpC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA6B,EAE5B,IAAI,CAACD,KAAK,CAACE,UAAU,CAACA,UAAU,CAACY,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC7C,QAAC,iBAAiB;QAAC,KAAK,EAAED,OAAO,CAACJ,KAAM;QAAC,SAAS,EAAEI,OAAO,CAACE,SAAU;QAAC,QAAQ,EAAEF,OAAO,CAACG,QAAS;QAAC,GAAG,EAAEH,OAAO,CAACI;MAAI;QAAA;QAAA;QAAA;MAAA,QAC3H,CAAC,eAEF,QAAC,UAAU;QAAC,QAAQ,EAAE,IAAI,CAACf;MAAa;QAAA;QAAA;QAAA;MAAA,QAAE,eAE1C,QAAC,YAAY;QAAC,QAAQ,EAAE,IAAI,CAACE;MAAa;QAAA;QAAA;QAAA;MAAA,QAAE,eAE5C,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACR;EAEd;AAEA;AACJ,eAAeT,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}