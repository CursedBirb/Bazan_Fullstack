{"ast":null,"code":"var _jsxFileName = \"C:\\\\SKRYPTY\\\\KROSNO\\\\TypeScript\\\\ProjektTS\\\\PrzykladyTSReact\\\\myreactapp\\\\src\\\\restbank\\\\BankTrans.tsx\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\n\n//Bez parametrow zewnetrznych\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\n\n//Parametry stanu komponentu\n\n;\n//Definiujemy pomocniczy typ\n\nclass BankTrans extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: 'OK',\n      textArea: \"Odczytaj przelewy\",\n      newClientname: \"nowak\",\n      newDate: \"2022-10-30\",\n      newRecipient: \"Paribas\",\n      newAmount: \"23.2\",\n      newUsername: \"nowak\",\n      newPassword: \"hnowak\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.getTransfers = this.getTransfers.bind(this);\n    this.getToken = this.getToken.bind(this);\n  }\n\n  //Pobranie danych z magazynu\n  getStorage(key) {\n    let items = \"NULL\";\n    let res = localStorage.getItem(key);\n    if (res == null) items = \"NULL\";else items = res;\n    return items;\n  }\n\n  //Wstawienie danych do magazynu\n  setStorage(key, item) {\n    localStorage.setItem(key, item);\n  }\n  async getToken() {\n    let username = this.state.newUsername;\n    let password = this.state.newPassword;\n    if (username.length > 0 && password.length > 0) {\n      await axios.post('http://localhost:8081/login/', {\n        username,\n        password\n      } //Podajemy parametry\n      ).then(response => {\n        let firstPartText = response.data.substring(0, \"ERROR:\".length);\n        let secondPartText = response.data.substring(\"ERROR:\".length, response.data.length);\n        if (firstPartText === \"ERROR:\") {\n          this.setState({\n            status: secondPartText\n          });\n        } else {\n          this.setStorage(\"TOKEN\", response.data);\n          this.setState({\n            status: \"Pobrano nowy token.\"\n          });\n        }\n      }).catch(err => {\n        let myerror = \"Błąd połaczenia sieciowego.\" + err;\n        this.setState({\n          status: myerror\n        });\n      });\n    }\n  }\n  async getTransfers() {\n    let token = \"Bearer \" + this.getStorage(\"TOKEN\"); //Pobranie tokenu z magazynu\n\n    await axios.get('http://localhost:8081/jwt/gettransfers/', {\n      headers: {\n        'Authorization': token\n      }\n    }).then(response => {\n      let transferListText = \"\";\n      response.data.forEach(e => {\n        let lclientname = e.clientname;\n        let ldate = e.date;\n        let lrecipient = e.recipient;\n        let lamount = e.amount;\n        let firstPartText = lclientname.substring(0, \"ERROR:\".length);\n        if (firstPartText !== \"ERROR:\") {\n          transferListText = transferListText + lclientname + \",\" + ldate + \" \" + lrecipient + \",\" + lamount + \"\\n\";\n          this.setState({\n            textArea: transferListText,\n            status: \"OK\"\n          });\n        } else {\n          let secondPartText = lclientname.substring(\"ERROR:\".length, lclientname.length);\n          transferListText = lclientname + \"\\n\";\n          this.setState({\n            textArea: transferListText,\n            status: secondPartText\n          });\n        }\n      });\n    }).catch(err => {\n      let myerror = \"Błąd połaczenia sieciowego.\" + err;\n      this.setState({\n        status: myerror\n      });\n    });\n  }\n  async addTransfer() {\n    let clientname = this.state.newClientname;\n    let date = this.state.newDate;\n    let recipient = this.state.newRecipient;\n    let amount = this.state.newAmount;\n    let token = \"Bearer \" + this.getStorage(\"TOKEN\"); //Pobranie tokenu z magazynu\n\n    if (clientname.length > 0 && date.length > 0 && recipient.length > 0 && parseInt(amount) > 0) {\n      let jsonStringVal = JSON.stringify({\n        clientname: clientname,\n        date: date,\n        recipient: recipient,\n        amount: amount\n      });\n      await axios.get('http://localhost:8081/jwt/addtransfer/', {\n        headers: {\n          'Authorization': token\n        },\n        params: {\n          jsonString: jsonStringVal\n        }\n      }).then(response => {\n        let firstPartText = response.data.substring(0, \"ERROR:\".length);\n        let secondPartText = response.data.substring(\"ERROR:\".length, response.data.length);\n        if (firstPartText === \"ERROR:\") {\n          this.setState({\n            status: secondPartText\n          });\n        } else {\n          this.setState({\n            status: response.data\n          });\n        }\n      }).catch(err => {\n        let myerror = \"Błąd połaczenia sieciowego.\" + err;\n        this.setState({\n          status: myerror\n        });\n      });\n    } else {\n      this.setState({\n        status: \"Żadna z danych wstawianej osoby nie może być pusta\"\n      });\n    }\n  }\n  handleChange(evt) {\n    const name = evt.target.name;\n    if (name === \"newUsername\") this.setState({\n      newUsername: evt.target.value\n    });\n    if (name === \"newPassword\") this.setState({\n      newPassword: evt.target.value\n    });\n    if (name === \"newClientname\") this.setState({\n      newClientname: evt.target.value\n    });\n    if (name === \"newDate\") this.setState({\n      newDate: evt.target.value\n    });\n    if (name === \"newRecipient\") this.setState({\n      newRecipient: evt.target.value\n    });\n    if (name === \"newAmount\") this.setState({\n      newAmount: evt.target.value\n    });\n  }\n  handleSubmit(event) {\n    this.addTransfer();\n    event.preventDefault(); //Dla zapobiegnieciu ponownemu załadowaniu/odświeżeniu przeglądarki\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Klient dost\\u0119pu do przelew\\xF3w w banku\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Status: \", this.state.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Dane nowego przelewu:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\" Klient: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"newClientname\",\n            value: this.state.newClientname,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 27\n          }, this), \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\" Data przelewu: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"newDate\",\n            value: this.state.newDate,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 34\n          }, this), \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\" Odbiorca przelewu: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"newRecipient\",\n            value: this.state.newRecipient,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 38\n          }, this), \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\" Kwota: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"newAmount\",\n            value: this.state.newAmount,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 26\n          }, this), \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Dodaj\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Lista przelew\\xF3w w bazie:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 14\n        }, this), \"  \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.getTransfers,\n          children: \"Odczytaj aktualn\\u0105 list\\u0119 przelew\\xF3w\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 56\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 135\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: this.state.textArea,\n          rows: 8,\n          cols: 60,\n          \"Read-only\": true,\n          spellCheck: \"false\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 17\n        }, this), \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Odczytanie tokenu (logowanie):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\" U\\u017Cytkownik: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"newUsername\",\n            value: this.state.newUsername,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 29\n          }, this), \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\" Has\\u0142o: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"newPassword\",\n            value: this.state.newPassword,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 24\n          }, this), \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.getToken,\n          children: \"Odczytaj nowy token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 70\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default BankTrans;","map":{"version":3,"names":["React","Component","axios","BankTrans","constructor","props","state","status","textArea","newClientname","newDate","newRecipient","newAmount","newUsername","newPassword","handleSubmit","bind","handleChange","getTransfers","getToken","getStorage","key","items","res","localStorage","getItem","setStorage","item","setItem","username","password","length","post","then","response","firstPartText","data","substring","secondPartText","setState","catch","err","myerror","token","get","headers","transferListText","forEach","e","lclientname","clientname","ldate","date","lrecipient","recipient","lamount","amount","addTransfer","parseInt","jsonStringVal","JSON","stringify","params","jsonString","evt","name","target","value","event","preventDefault","render"],"sources":["C:/SKRYPTY/KROSNO/TypeScript/ProjektTS/PrzykladyTSReact/myreactapp/src/restbank/BankTrans.tsx"],"sourcesContent":["import React, { Component, FormEvent, ChangeEvent } from \"react\";\r\nimport axios from 'axios';\r\n\r\n//Bez parametrow zewnetrznych\r\ninterface Props {\r\n};\r\n\r\n//Parametry stanu komponentu\r\ninterface State {\r\n  status: string;\r\n  textArea: string;\r\n\r\n  //Do przelewu\r\n  newClientname: string;\r\n  newDate: string;\r\n  newRecipient: string;\r\n  newAmount: string;\r\n\r\n  //Do logowania\r\n  newUsername: string;\r\n  newPassword: string;\r\n\r\n}\r\n\r\n//Pomocniczy interfejs do przesylania danych od serwera\r\ninterface Transfer {\r\n  clientname: string;\r\n  date: string;\r\n  recipient: string;\r\n  amount: number;\r\n};\r\n\r\n\r\n\r\nexport type TMyTransferList = Transfer[] //Definiujemy pomocniczy typ\r\n\r\nclass BankTrans extends Component<Props, State>\r\n{\r\n\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      status: 'OK', textArea: \"Odczytaj przelewy\",\r\n      newClientname: \"nowak\", newDate: \"2022-10-30\", newRecipient: \"Paribas\", newAmount: \"23.2\",\r\n      newUsername: \"nowak\", newPassword: \"hnowak\",\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.getTransfers = this.getTransfers.bind(this);\r\n    this.getToken = this.getToken.bind(this);\r\n  }\r\n\r\n  //Pobranie danych z magazynu\r\n  getStorage(key: string): string {\r\n    let items: string = \"NULL\";\r\n    let res = localStorage.getItem(key);\r\n    if (res == null) items = \"NULL\";\r\n    else items = res;\r\n    return items;\r\n  }\r\n\r\n  //Wstawienie danych do magazynu\r\n  setStorage(key: string, item: string): void {\r\n    localStorage.setItem(key, item);\r\n  }\r\n\r\n  async getToken() {\r\n\r\n    let username = this.state.newUsername;\r\n    let password = this.state.newPassword;\r\n\r\n    if ((username.length > 0) && (password.length > 0)) {\r\n\r\n      await axios.post<string>('http://localhost:8081/login/',\r\n        { username, password }, //Podajemy parametry\r\n      )\r\n        .then(response => {\r\n\r\n          let firstPartText = response.data.substring(0, (\"ERROR:\").length);\r\n          let secondPartText = response.data.substring((\"ERROR:\").length, response.data.length);\r\n\r\n          if (firstPartText === \"ERROR:\") {\r\n            this.setState({ status: secondPartText });\r\n          }\r\n          else {\r\n            this.setStorage(\"TOKEN\", response.data);\r\n            this.setState({ status: \"Pobrano nowy token.\" });\r\n          }\r\n\r\n        }).catch(err => {\r\n          let myerror = \"Błąd połaczenia sieciowego.\" + err;\r\n          this.setState({ status: myerror });\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n  async getTransfers() {\r\n\r\n\r\n    let token = \"Bearer \" + this.getStorage(\"TOKEN\"); //Pobranie tokenu z magazynu\r\n\r\n    await axios.get<TMyTransferList>('http://localhost:8081/jwt/gettransfers/', { headers: { 'Authorization': token } })\r\n      .then(response => {\r\n\r\n\r\n        let transferListText = \"\"\r\n\r\n        response.data.forEach((e) => {\r\n          let lclientname = e.clientname; let ldate = e.date; let lrecipient = e.recipient; let lamount = e.amount;\r\n\r\n          let firstPartText = lclientname.substring(0, (\"ERROR:\").length);\r\n          \r\n\r\n          if (firstPartText !== \"ERROR:\") {\r\n            transferListText = transferListText + lclientname + \",\" + ldate + \" \" + lrecipient + \",\" + lamount + \"\\n\";\r\n            this.setState({ textArea: transferListText, status: \"OK\" });\r\n          }\r\n          else {\r\n            let secondPartText = lclientname.substring((\"ERROR:\").length, lclientname.length);\r\n            transferListText = lclientname + \"\\n\";\r\n            this.setState({ textArea: transferListText, status: secondPartText });\r\n          }\r\n        })\r\n\r\n        \r\n\r\n      }).catch(err => {\r\n        let myerror = \"Błąd połaczenia sieciowego.\" + err;\r\n        this.setState({ status: myerror });\r\n      });\r\n\r\n  }\r\n\r\n\r\n  async addTransfer() {\r\n    let clientname = this.state.newClientname;\r\n    let date = this.state.newDate;\r\n    let recipient = this.state.newRecipient;\r\n    let amount = this.state.newAmount;\r\n\r\n    let token = \"Bearer \" + this.getStorage(\"TOKEN\"); //Pobranie tokenu z magazynu\r\n\r\n\r\n    if ((clientname.length > 0) && (date.length > 0) && (recipient.length > 0) && (parseInt(amount) > 0)) {\r\n\r\n      let jsonStringVal = JSON.stringify({ clientname: clientname, date: date, recipient: recipient, amount: amount });\r\n\r\n      await axios.get<string>('http://localhost:8081/jwt/addtransfer/', { headers: { 'Authorization': token }, params: { jsonString: jsonStringVal } })\r\n        .then(response => {\r\n\r\n          let firstPartText = response.data.substring(0, (\"ERROR:\").length);\r\n          let secondPartText = response.data.substring((\"ERROR:\").length, response.data.length);\r\n\r\n          if (firstPartText === \"ERROR:\") {\r\n            this.setState({ status: secondPartText });\r\n          }\r\n          else {\r\n            this.setState({ status: response.data });\r\n          }\r\n\r\n        }).catch(err => {\r\n          let myerror = \"Błąd połaczenia sieciowego.\" + err;\r\n          this.setState({ status: myerror });\r\n        });\r\n    }\r\n    else {\r\n      this.setState({ status: \"Żadna z danych wstawianej osoby nie może być pusta\" });\r\n    }\r\n  }\r\n\r\n\r\n  handleChange(evt: ChangeEvent<HTMLInputElement>) {\r\n\r\n    const name = evt.target.name;\r\n\r\n    if (name === \"newUsername\") this.setState({ newUsername: evt.target.value });\r\n    if (name === \"newPassword\") this.setState({ newPassword: evt.target.value });\r\n\r\n    if (name === \"newClientname\") this.setState({ newClientname: evt.target.value });\r\n    if (name === \"newDate\") this.setState({ newDate: evt.target.value });\r\n    if (name === \"newRecipient\") this.setState({ newRecipient: evt.target.value });\r\n    if (name === \"newAmount\") this.setState({ newAmount: evt.target.value });   \r\n  }\r\n\r\n  handleSubmit(event: FormEvent<HTMLFormElement>): void {\r\n\r\n    this.addTransfer();\r\n    event.preventDefault(); //Dla zapobiegnieciu ponownemu załadowaniu/odświeżeniu przeglądarki\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Klient dostępu do przelewów w banku</h1>\r\n\r\n        <h3>Status: {this.state.status}</h3>\r\n\r\n        <div><label> Dane nowego przelewu:</label></div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label> Klient: <input type=\"text\" name='newClientname' value={this.state.newClientname} onChange={this.handleChange} />  </label>\r\n          <label> Data przelewu: <input type=\"text\" name='newDate' value={this.state.newDate} onChange={this.handleChange} />  </label>\r\n          <label> Odbiorca przelewu: <input type=\"text\" name='newRecipient' value={this.state.newRecipient} onChange={this.handleChange} />  </label>\r\n          <label> Kwota: <input type=\"text\" name='newAmount' value={this.state.newAmount} onChange={this.handleChange} />  </label>\r\n\r\n          <input type=\"submit\" value=\"Dodaj\" />\r\n\r\n        </form>\r\n\r\n\r\n        <div><br></br></div>\r\n        <div><label> Lista przelewów w bazie:</label>  <button onClick={this.getTransfers}>Odczytaj aktualną listę przelewów</button> <br /></div>\r\n                \r\n        <label> <textarea value={this.state.textArea} rows={8} cols={60} Read-only spellCheck=\"false\" />  </label>\r\n\r\n        <div><br></br></div>\r\n        <div><label> Odczytanie tokenu (logowanie):</label>\r\n        <div></div>\r\n        <label> Użytkownik: <input type=\"text\" name='newUsername' value={this.state.newUsername} onChange={this.handleChange} />  </label>\r\n        <label> Hasło: <input type=\"text\" name='newPassword' value={this.state.newPassword} onChange={this.handleChange} />  </label>\r\n\r\n        <button onClick={this.getToken}>Odczytaj nowy token</button> <br /></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default BankTrans;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}