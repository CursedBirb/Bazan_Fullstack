{"ast":null,"code":"var _jsxFileName = \"C:\\\\SKRYPTY\\\\KROSNO\\\\Modern programming techniques\\\\DRUGI_SEMESTR_2023\\\\JavaScript2023\\\\PrzykladyJSReact2023\\\\myreactapp\\\\src\\\\teststorage\\\\ASForm.js\";\nimport React, { Component } from \"react\";\n\n//Komponent demonstracujący zapis i odczyt danych do i z lokalnego magazynu\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Form1 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\"\n    };\n    this.bclear = this.bclear.bind(this);\n    this.bset = this.bset.bind(this);\n    this.bget = this.bget.bind(this);\n  }\n\n  //Pobranie wartości z magazynu dla podanego klucza\n  getStorage(key) {\n    let items = \"NULL\";\n    let res = localStorage.getItem(key);\n    if (res == null) {\n      items = \"NULL\";\n    } else {\n      items = res;\n    }\n    return items;\n  }\n\n  //Wstawienie wartości o podanym kluczu do magazynu\n  setStorage(key, item) {\n    localStorage.setItem(key, item);\n  }\n\n  //Czyszczenie wartości dla dwóch podanych kluczy\n  bclear() {\n    this.setStorage(\"ala\", \"\");\n    this.setStorage(\"ola\", \"\");\n  }\n\n  //Wstawienie dwóch wartości, kazde o podanym kluczu \n  bset() {\n    let items1 = this.getStorage(\"ala\");\n    let items2 = this.getStorage(\"ola\");\n    this.setStorage(\"ala\", items1 + \" \" + \"kowalska\");\n    this.setStorage(\"ola\", items2 + \" \" + \"nowak\");\n  }\n\n  //Pobranie dwóch wartości z magazynu\n  bget() {\n    let items1 = this.getStorage(\"ala\");\n    let items2 = this.getStorage(\"ola\");\n    let list = items1 + \" \" + items2;\n    this.setState(prevState => ({\n      text: list\n    }));\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Stan: \", this.state.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.bclear,\n        children: \"Wyczy\\u015B\\u0107\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.bset,\n        children: \"Dodaj\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.bget,\n        children: \"Poka\\u017C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Form1;","map":{"version":3,"names":["React","Component","Form1","constructor","props","state","text","bclear","bind","bset","bget","getStorage","key","items","res","localStorage","getItem","setStorage","item","setItem","items1","items2","list","setState","prevState","render"],"sources":["C:/SKRYPTY/KROSNO/Modern programming techniques/DRUGI_SEMESTR_2023/JavaScript2023/PrzykladyJSReact2023/myreactapp/src/teststorage/ASForm.js"],"sourcesContent":["\r\nimport React, { Component } from \"react\";\r\n\r\n//Komponent demonstracujący zapis i odczyt danych do i z lokalnego magazynu\r\n\r\n\r\nclass Form1 extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            text: \"\"\r\n        }\r\n       \r\n        this.bclear = this.bclear.bind(this);\r\n        this.bset = this.bset.bind(this);\r\n        this.bget = this.bget.bind(this);\r\n                        \r\n    }\r\n\r\n    //Pobranie wartości z magazynu dla podanego klucza\r\n    getStorage(key) {\r\n        let items = \"NULL\";\r\n        let res = localStorage.getItem(key);\r\n        if (res==null)\r\n        {\r\n            items = \"NULL\";            \r\n        }\r\n        else{\r\n            items = res;\r\n        }\r\n        return items;\r\n    }\r\n\r\n    //Wstawienie wartości o podanym kluczu do magazynu\r\n    setStorage(key,item) {\r\n        localStorage.setItem(key,item);\r\n    }\r\n\r\n    //Czyszczenie wartości dla dwóch podanych kluczy\r\n    bclear() {\r\n        this.setStorage(\"ala\",\"\");\r\n        this.setStorage(\"ola\",\"\");\r\n    }\r\n\r\n\r\n    //Wstawienie dwóch wartości, kazde o podanym kluczu \r\n    bset() {\r\n\r\n        let items1 = this.getStorage(\"ala\"); \r\n        let items2 = this.getStorage(\"ola\"); \r\n        \r\n        this.setStorage(\"ala\",items1+\" \"+\"kowalska\");\r\n        this.setStorage(\"ola\",items2+\" \"+\"nowak\");\r\n    }\r\n\r\n\r\n\r\n    //Pobranie dwóch wartości z magazynu\r\n    bget() {\r\n        \r\n        let items1 = this.getStorage(\"ala\"); \r\n        let items2 = this.getStorage(\"ola\"); \r\n            \r\n        let list = items1 + \" \" + items2;\r\n        \r\n        this.setState((prevState) => ({\r\n            text: list\r\n        }));\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Stan: {this.state.text}</h3>\r\n                <p></p>\r\n                <button onClick={this.bclear}>Wyczyść</button>\r\n                <p></p>\r\n                <button onClick={this.bset}>Dodaj</button>\r\n                <p></p>\r\n                <button onClick={this.bget}>Pokaż</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Form1;\r\n\r\n"],"mappings":";AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;;AAExC;AAAA;AAGA,MAAMC,KAAK,SAASD,SAAS,CAAC;EAC1BE,WAAW,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,KAAK,GAAG;MACTC,IAAI,EAAE;IACV,CAAC;IAED,IAAI,CAACC,MAAM,GAAG,IAAI,CAACA,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC;IACpC,IAAI,CAACC,IAAI,GAAG,IAAI,CAACA,IAAI,CAACD,IAAI,CAAC,IAAI,CAAC;IAChC,IAAI,CAACE,IAAI,GAAG,IAAI,CAACA,IAAI,CAACF,IAAI,CAAC,IAAI,CAAC;EAEpC;;EAEA;EACAG,UAAU,CAACC,GAAG,EAAE;IACZ,IAAIC,KAAK,GAAG,MAAM;IAClB,IAAIC,GAAG,GAAGC,YAAY,CAACC,OAAO,CAACJ,GAAG,CAAC;IACnC,IAAIE,GAAG,IAAE,IAAI,EACb;MACID,KAAK,GAAG,MAAM;IAClB,CAAC,MACG;MACAA,KAAK,GAAGC,GAAG;IACf;IACA,OAAOD,KAAK;EAChB;;EAEA;EACAI,UAAU,CAACL,GAAG,EAACM,IAAI,EAAE;IACjBH,YAAY,CAACI,OAAO,CAACP,GAAG,EAACM,IAAI,CAAC;EAClC;;EAEA;EACAX,MAAM,GAAG;IACL,IAAI,CAACU,UAAU,CAAC,KAAK,EAAC,EAAE,CAAC;IACzB,IAAI,CAACA,UAAU,CAAC,KAAK,EAAC,EAAE,CAAC;EAC7B;;EAGA;EACAR,IAAI,GAAG;IAEH,IAAIW,MAAM,GAAG,IAAI,CAACT,UAAU,CAAC,KAAK,CAAC;IACnC,IAAIU,MAAM,GAAG,IAAI,CAACV,UAAU,CAAC,KAAK,CAAC;IAEnC,IAAI,CAACM,UAAU,CAAC,KAAK,EAACG,MAAM,GAAC,GAAG,GAAC,UAAU,CAAC;IAC5C,IAAI,CAACH,UAAU,CAAC,KAAK,EAACI,MAAM,GAAC,GAAG,GAAC,OAAO,CAAC;EAC7C;;EAIA;EACAX,IAAI,GAAG;IAEH,IAAIU,MAAM,GAAG,IAAI,CAACT,UAAU,CAAC,KAAK,CAAC;IACnC,IAAIU,MAAM,GAAG,IAAI,CAACV,UAAU,CAAC,KAAK,CAAC;IAEnC,IAAIW,IAAI,GAAGF,MAAM,GAAG,GAAG,GAAGC,MAAM;IAEhC,IAAI,CAACE,QAAQ,CAAEC,SAAS,KAAM;MAC1BlB,IAAI,EAAEgB;IACV,CAAC,CAAC,CAAC;EACP;EAGAG,MAAM,GAAG;IACL,oBACI;MAAA,wBACI;QAAA,qBAAW,IAAI,CAACpB,KAAK,CAACC,IAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,eAChC;QAAA;QAAA;QAAA;MAAA,QAAO,eACP;QAAQ,OAAO,EAAE,IAAI,CAACC,MAAO;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAiB,eAC9C;QAAA;QAAA;QAAA;MAAA,QAAO,eACP;QAAQ,OAAO,EAAE,IAAI,CAACE,IAAK;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAe,eAC1C;QAAA;QAAA;QAAA;MAAA,QAAO,eACP;QAAQ,OAAO,EAAE,IAAI,CAACC,IAAK;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAe;IAAA;MAAA;MAAA;MAAA;IAAA,QACxC;EAEd;AACJ;AACA,eAAeR,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}