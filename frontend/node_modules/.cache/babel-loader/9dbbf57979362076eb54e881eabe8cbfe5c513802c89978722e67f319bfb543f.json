{"ast":null,"code":"import SPerson from \"./SPerson\";\n\n//Implementacja kolekcji osob\n\nclass SPersonList {\n  constructor() {\n    this.personList = void 0;\n    this.personList = [];\n  }\n  add(person) {\n    this.personList.push(person);\n  }\n  addPerson(email, firstname, lastname, age) {\n    let locPerson = new SPerson(email, firstname, lastname, age);\n    this.personList.push(locPerson);\n  }\n  get(index) {\n    return this.personList[index];\n  }\n  size() {\n    return this.personList.length;\n  }\n\n  //Utworzenie bazy poczatkowej ksiazek\n  build() {\n    let p1 = new SPerson(\"jkowalski@gmail.com\", \"Jan\", \"Kowalski\", 35);\n    let p2 = new SPerson(\"mnowak@gmail.com\", \"Marek\", \"Nowak\", 46);\n    let p3 = new SPerson(\"awazna@gmail.com\", \"Anna\", \"Wazna\", 26);\n    this.add(p1);\n    this.add(p2);\n    this.add(p3);\n  }\n  deletePerson(email) {\n    if (this.size() > 0) {\n      let locPersonList = [];\n      let finded = false;\n      for (let i = 0; i < this.size(); i = i + 1) {\n        let person = this.get(i);\n        let locEmail = person.email;\n        if (locEmail != email) {\n          locPersonList.push(person);\n        } else {\n          finded = true;\n        }\n      }\n      if (!finded) {\n        return false;\n      } else {\n        this.personList = locPersonList;\n        return true;\n      }\n    } else {\n      return false;\n    }\n  }\n}\nexport default SPersonList;","map":{"version":3,"names":["SPerson","SPersonList","constructor","personList","add","person","push","addPerson","email","firstname","lastname","age","locPerson","get","index","size","length","build","p1","p2","p3","deletePerson","locPersonList","finded","i","locEmail"],"sources":["C:/SKRYPTY/KROSNO/TypeScript/ProjektTS/PrzykladyTSReact/myreactapp/src/sdatabase/SPersonList.tsx"],"sourcesContent":["import SPerson from \"./SPerson\"\r\n\r\n\r\n//Implementacja kolekcji osob\r\n\r\nclass SPersonList {\r\n\r\n    public personList: SPerson[];\r\n\r\n    constructor() {\r\n        this.personList = [];\r\n    }\r\n\r\n    public add(person: SPerson): void {\r\n        this.personList.push(person);\r\n    }\r\n\r\n    public addPerson(email: string, firstname: string, lastname: string, age: number): void {\r\n        let locPerson = new SPerson(email, firstname, lastname, age);\r\n        this.personList.push(locPerson);\r\n    }\r\n\r\n\r\n    public get(index: number): SPerson {\r\n        return this.personList[index];\r\n    }\r\n\r\n    public size(): number {\r\n        return this.personList.length;\r\n    }\r\n\r\n\r\n    //Utworzenie bazy poczatkowej ksiazek\r\n    public build(): void {\r\n        let p1 = new SPerson(\"jkowalski@gmail.com\", \"Jan\", \"Kowalski\", 35);\r\n        let p2 = new SPerson(\"mnowak@gmail.com\", \"Marek\", \"Nowak\", 46);\r\n        let p3 = new SPerson(\"awazna@gmail.com\", \"Anna\", \"Wazna\", 26);\r\n\r\n\r\n        this.add(p1); this.add(p2); this.add(p3);\r\n    }\r\n\r\n\r\n    public deletePerson(email: string): boolean {\r\n\r\n        if (this.size() > 0) {\r\n\r\n            let locPersonList: SPerson[] = [];\r\n\r\n            let finded: boolean = false;\r\n\r\n            for (let i: number = 0; i < this.size(); i = i + 1) {\r\n                let person = this.get(i);\r\n                let locEmail = person.email;\r\n\r\n                if (locEmail != email) {\r\n                    locPersonList.push(person);\r\n                }\r\n                else {\r\n                    finded = true;\r\n                }\r\n            }\r\n\r\n            if (!finded) {\r\n                return false;\r\n            }\r\n            else {\r\n                this.personList = locPersonList;\r\n                return true;                \r\n            }\r\n\r\n        }\r\n        else{\r\n            return false;            \r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default SPersonList;\r\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,WAAW;;AAG/B;;AAEA,MAAMC,WAAW,CAAC;EAIdC,WAAW,GAAG;IAAA,KAFPC,UAAU;IAGb,IAAI,CAACA,UAAU,GAAG,EAAE;EACxB;EAEOC,GAAG,CAACC,MAAe,EAAQ;IAC9B,IAAI,CAACF,UAAU,CAACG,IAAI,CAACD,MAAM,CAAC;EAChC;EAEOE,SAAS,CAACC,KAAa,EAAEC,SAAiB,EAAEC,QAAgB,EAAEC,GAAW,EAAQ;IACpF,IAAIC,SAAS,GAAG,IAAIZ,OAAO,CAACQ,KAAK,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,GAAG,CAAC;IAC5D,IAAI,CAACR,UAAU,CAACG,IAAI,CAACM,SAAS,CAAC;EACnC;EAGOC,GAAG,CAACC,KAAa,EAAW;IAC/B,OAAO,IAAI,CAACX,UAAU,CAACW,KAAK,CAAC;EACjC;EAEOC,IAAI,GAAW;IAClB,OAAO,IAAI,CAACZ,UAAU,CAACa,MAAM;EACjC;;EAGA;EACOC,KAAK,GAAS;IACjB,IAAIC,EAAE,GAAG,IAAIlB,OAAO,CAAC,qBAAqB,EAAE,KAAK,EAAE,UAAU,EAAE,EAAE,CAAC;IAClE,IAAImB,EAAE,GAAG,IAAInB,OAAO,CAAC,kBAAkB,EAAE,OAAO,EAAE,OAAO,EAAE,EAAE,CAAC;IAC9D,IAAIoB,EAAE,GAAG,IAAIpB,OAAO,CAAC,kBAAkB,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,CAAC;IAG7D,IAAI,CAACI,GAAG,CAACc,EAAE,CAAC;IAAE,IAAI,CAACd,GAAG,CAACe,EAAE,CAAC;IAAE,IAAI,CAACf,GAAG,CAACgB,EAAE,CAAC;EAC5C;EAGOC,YAAY,CAACb,KAAa,EAAW;IAExC,IAAI,IAAI,CAACO,IAAI,EAAE,GAAG,CAAC,EAAE;MAEjB,IAAIO,aAAwB,GAAG,EAAE;MAEjC,IAAIC,MAAe,GAAG,KAAK;MAE3B,KAAK,IAAIC,CAAS,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACT,IAAI,EAAE,EAAES,CAAC,GAAGA,CAAC,GAAG,CAAC,EAAE;QAChD,IAAInB,MAAM,GAAG,IAAI,CAACQ,GAAG,CAACW,CAAC,CAAC;QACxB,IAAIC,QAAQ,GAAGpB,MAAM,CAACG,KAAK;QAE3B,IAAIiB,QAAQ,IAAIjB,KAAK,EAAE;UACnBc,aAAa,CAAChB,IAAI,CAACD,MAAM,CAAC;QAC9B,CAAC,MACI;UACDkB,MAAM,GAAG,IAAI;QACjB;MACJ;MAEA,IAAI,CAACA,MAAM,EAAE;QACT,OAAO,KAAK;MAChB,CAAC,MACI;QACD,IAAI,CAACpB,UAAU,GAAGmB,aAAa;QAC/B,OAAO,IAAI;MACf;IAEJ,CAAC,MACG;MACA,OAAO,KAAK;IAChB;EAEJ;AAEJ;AAEA,eAAerB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}