{"ast":null,"code":"var _jsxFileName = \"C:\\\\BazanFullStack\\\\frontend\\\\src\\\\components\\\\Hiragana.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GetLatestScores() {\n  _s();\n  const backendUrl = 'http://localhost:8081';\n  const [targetNumberOfLetter, setTargetNumberOfLetter] = useState(\"Ka\");\n  const [status, setStatus] = useState(\"OK\");\n  const [image, setImage] = useState(\"Brak Zdjęcia\");\n  const [romaji, setRomaji] = useState(\"Brak Litery\");\n  async function getRecordById() {\n    await axios.post(`${backendUrl}/api/v1/gethiraganarecord/`).then(response => {\n      console.log(response.data);\n      let idFound = false;\n      response.data.forEach(e => {\n        let lid = e.id;\n        let lhiraganaRomaji = e.hiraganaRomaji;\n        let lhiraganaImage = e.hiraganaImage;\n        let firstPartText = lhiraganaRomaji.substring(0, \"ERROR:\".length);\n        if (firstPartText !== \"ERROR:\") {\n          setStatus(\"OK\");\n          setRomaji(`${lhiraganaRomaji}`);\n          setImage(`${lhiraganaImage}`);\n          idFound = true;\n        } else {\n          let secondPartText = lhiraganaRomaji.substring(\"ERROR:\".length, lhiraganaRomaji.length);\n          setStatus(secondPartText);\n          setRomaji(secondPartText);\n          idFound = true;\n        }\n      });\n    }).catch(err => {\n      let myerror = \"Błąd połaczenia sieciowego.\" + err;\n      setStatus(myerror);\n    });\n  }\n  const incrementTarget = () => {\n    setTargetNumberOfLetter(targetNumberOfLetter + 1);\n    getRecordById();\n  };\n  useEffect(() => {\n    getRecordById();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: incrementTarget,\n      children: \"Pobierz Wynik\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: targetNumberOfLetter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: romaji\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 7\n  }, this);\n}\n_s(GetLatestScores, \"1j3oKnVtudTESgwIhJIBHbUOb9M=\");\n_c = GetLatestScores;\nvar _c;\n$RefreshReg$(_c, \"GetLatestScores\");","map":{"version":3,"names":["axios","React","useEffect","useState","GetLatestScores","backendUrl","targetNumberOfLetter","setTargetNumberOfLetter","status","setStatus","image","setImage","romaji","setRomaji","getRecordById","post","then","response","console","log","data","idFound","forEach","e","lid","id","lhiraganaRomaji","hiraganaRomaji","lhiraganaImage","hiraganaImage","firstPartText","substring","length","secondPartText","catch","err","myerror","incrementTarget"],"sources":["C:/BazanFullStack/frontend/src/components/Hiragana.js"],"sourcesContent":["import axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nexport default function GetLatestScores() {\r\n\r\n  const backendUrl = 'http://localhost:8081';\r\n  const [targetNumberOfLetter, setTargetNumberOfLetter] = useState(\"Ka\");\r\n  const [status, setStatus] = useState(\"OK\");\r\n  const [image, setImage] = useState(\"Brak Zdjęcia\");\r\n  const [romaji, setRomaji] = useState(\"Brak Litery\");\r\n\r\n    async function getRecordById() {\r\n\r\n        await axios.post(`${backendUrl}/api/v1/gethiraganarecord/`)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                let idFound = false;\r\n\r\n\r\n                response.data.forEach((e) => {\r\n                    let lid = e.id;\r\n                    let lhiraganaRomaji = e.hiraganaRomaji;\r\n                    let lhiraganaImage = e.hiraganaImage;\r\n\r\n                    let firstPartText = lhiraganaRomaji.substring(0, \"ERROR:\".length);\r\n\r\n\r\n                    if (firstPartText !== \"ERROR:\") {\r\n                        setStatus(\"OK\");\r\n                        setRomaji(`${lhiraganaRomaji}`);\r\n                        setImage(`${lhiraganaImage}`);\r\n                        idFound = true;\r\n                    }\r\n                    else {\r\n                        let secondPartText = lhiraganaRomaji.substring(\"ERROR:\".length, lhiraganaRomaji.length);\r\n                        setStatus(secondPartText);\r\n                        setRomaji(secondPartText);\r\n                        idFound = true;\r\n                    }\r\n                })\r\n\r\n            }).catch(err => {\r\n\r\n                let myerror = \"Błąd połaczenia sieciowego.\" + err;\r\n                setStatus(myerror);\r\n            });\r\n\r\n    }\r\n\r\n    const incrementTarget = () => {\r\n\r\n        setTargetNumberOfLetter(targetNumberOfLetter + 1);\r\n        getRecordById();\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        getRecordById();\r\n\r\n    }, []);\r\n\r\n    return (\r\n\r\n      <div>\r\n\r\n      <button onClick={incrementTarget}>Pobierz Wynik</button>\r\n\r\n      <p>{targetNumberOfLetter}</p>\r\n      <p>{status}</p>\r\n      <p>{romaji}</p>\r\n      <p>{image}</p>\r\n\r\n  </div>\r\n\r\n    );\r\n\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,sCAAsC;AAC7C,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAEnD,eAAe,SAASC,eAAe,GAAG;EAAA;EAExC,MAAMC,UAAU,GAAG,uBAAuB;EAC1C,MAAM,CAACC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACtE,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,cAAc,CAAC;EAClD,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,aAAa,CAAC;EAEjD,eAAeW,aAAa,GAAG;IAE3B,MAAMd,KAAK,CAACe,IAAI,CAAE,GAAEV,UAAW,4BAA2B,CAAC,CACtDW,IAAI,CAACC,QAAQ,IAAI;MACdC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;MAC1B,IAAIC,OAAO,GAAG,KAAK;MAGnBJ,QAAQ,CAACG,IAAI,CAACE,OAAO,CAAEC,CAAC,IAAK;QACzB,IAAIC,GAAG,GAAGD,CAAC,CAACE,EAAE;QACd,IAAIC,eAAe,GAAGH,CAAC,CAACI,cAAc;QACtC,IAAIC,cAAc,GAAGL,CAAC,CAACM,aAAa;QAEpC,IAAIC,aAAa,GAAGJ,eAAe,CAACK,SAAS,CAAC,CAAC,EAAE,QAAQ,CAACC,MAAM,CAAC;QAGjE,IAAIF,aAAa,KAAK,QAAQ,EAAE;UAC5BrB,SAAS,CAAC,IAAI,CAAC;UACfI,SAAS,CAAE,GAAEa,eAAgB,EAAC,CAAC;UAC/Bf,QAAQ,CAAE,GAAEiB,cAAe,EAAC,CAAC;UAC7BP,OAAO,GAAG,IAAI;QAClB,CAAC,MACI;UACD,IAAIY,cAAc,GAAGP,eAAe,CAACK,SAAS,CAAC,QAAQ,CAACC,MAAM,EAAEN,eAAe,CAACM,MAAM,CAAC;UACvFvB,SAAS,CAACwB,cAAc,CAAC;UACzBpB,SAAS,CAACoB,cAAc,CAAC;UACzBZ,OAAO,GAAG,IAAI;QAClB;MACJ,CAAC,CAAC;IAEN,CAAC,CAAC,CAACa,KAAK,CAACC,GAAG,IAAI;MAEZ,IAAIC,OAAO,GAAG,6BAA6B,GAAGD,GAAG;MACjD1B,SAAS,CAAC2B,OAAO,CAAC;IACtB,CAAC,CAAC;EAEV;EAEA,MAAMC,eAAe,GAAG,MAAM;IAE1B9B,uBAAuB,CAACD,oBAAoB,GAAG,CAAC,CAAC;IACjDQ,aAAa,EAAE;EAEnB,CAAC;EAEDZ,SAAS,CAAC,MAAM;IAEZY,aAAa,EAAE;EAEnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBAEE;IAAA,wBAEA;MAAQ,OAAO,EAAEuB,eAAgB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAuB,eAExD;MAAA,UAAI/B;IAAoB;MAAA;MAAA;MAAA;IAAA,QAAK,eAC7B;MAAA,UAAIE;IAAM;MAAA;MAAA;MAAA;IAAA,QAAK,eACf;MAAA,UAAII;IAAM;MAAA;MAAA;MAAA;IAAA,QAAK,eACf;MAAA,UAAIF;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QAEZ;AAIR;AAAC,GA1EuBN,eAAe;AAAA,KAAfA,eAAe;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}