{"ast":null,"code":"import SBook from \"./SBook\";\nclass SBookList {\n  constructor() {\n    this.books = void 0;\n    this.books = [];\n  }\n  add(book) {\n    this.books.push(book);\n  }\n  get(index) {\n    return this.books[index];\n  }\n  size() {\n    return this.books.length;\n  }\n  remove(index) {\n    if (index >= 0 && index < this.books.length) {\n      this.books.splice(index, 1);\n    }\n  }\n  getCopy() {\n    let locBookList = new SBookList();\n    if (this.size() > 0) {\n      for (let i = 0; i < this.size(); i = i + 1) {\n        let book = this.get(i);\n        locBookList.add(book);\n      }\n    }\n    return locBookList;\n  }\n\n  //Utworzenie bazy poczatkowej ksiazek\n  build() {\n    let b1 = new SBook(\"Hobbit\", \"Tolkien\", \"455\");\n    let b2 = new SBook(\"Rok 1984\", \"Orwell\", \"455\");\n    let b3 = new SBook(\"Władca Pierścieni\", \"Tolkien\", \"669\");\n    let b4 = new SBook(\"Stary człowiek i morze\", \"Hemingway\", \"226\");\n    this.add(b1);\n    this.add(b2);\n    this.add(b3);\n    this.add(b4);\n  }\n  selectBooks() {\n    if (this.size() > 0) {\n      let nbooks = [];\n      for (let i = 0; i < this.size(); i = i + 1) {\n        let book = this.get(i);\n        let author = book.author;\n        if (author == \"Tolkien\") {\n          nbooks.push(book);\n        }\n      }\n      this.books = nbooks;\n    }\n  }\n  filtrBooks(filtrText) {\n    if (this.size() > 0) {\n      let filter = filtrText.toUpperCase();\n      let nbooks = [];\n      for (let i = 0; i < this.size(); i = i + 1) {\n        let book = this.get(i);\n        let author = book.author;\n        let title = book.title;\n        let text = author + \" \" + title;\n        text = text.toUpperCase();\n        if (text.includes(filter)) {\n          nbooks.push(book);\n        }\n      }\n      this.books = nbooks;\n    }\n  }\n  addBook() {\n    let b = new SBook(\"Pan Tadeusz\", \"Mickiewicz\", \"345\");\n    this.add(b);\n  }\n}\nexport default SBookList;","map":{"version":3,"names":["SBook","SBookList","constructor","books","add","book","push","get","index","size","length","remove","splice","getCopy","locBookList","i","build","b1","b2","b3","b4","selectBooks","nbooks","author","filtrBooks","filtrText","filter","toUpperCase","title","text","includes","addBook","b"],"sources":["C:/SKRYPTY/KROSNO/TypeScript/ProjektTS/PrzykladyTSReact/myreactapp/src/books/SBookList.tsx"],"sourcesContent":["import  SBook from \"./SBook\"\r\n\r\nclass SBookList{\r\n\r\n    public books : SBook[];\r\n    \r\n    constructor(){\r\n        this.books = [];        \r\n    }\r\n\r\n    public add(book : SBook) : void {\r\n        this.books.push(book);\r\n    }\r\n\r\n    public get(index : number) : SBook {\r\n        return this.books[index];\r\n    }\r\n\r\n    public size() : number {\r\n        return this.books.length;\r\n    }\r\n\r\n    public remove(index : number) : void {\r\n\r\n        if ((index >=0)&&(index<this.books.length)) {\r\n            this.books.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    public getCopy() : SBookList {\r\n\r\n        let locBookList : SBookList = new SBookList();\r\n\r\n        if (this.size()>0)\r\n        {\r\n            for (let i : number=0; i<this.size(); i=i+1)\r\n            {\r\n                let book = this.get(i);\r\n                locBookList.add(book);                \r\n            }            \r\n        }\r\n\r\n        return locBookList;\r\n    }\r\n\r\n    //Utworzenie bazy poczatkowej ksiazek\r\n    public build() : void {\r\n        let b1 = new SBook(\"Hobbit\",\"Tolkien\",\"455\");\r\n        let b2 = new SBook(\"Rok 1984\",\"Orwell\",\"455\");\r\n        let b3 = new SBook(\"Władca Pierścieni\",\"Tolkien\",\"669\");\r\n        let b4 = new SBook(\"Stary człowiek i morze\",\"Hemingway\",\"226\");\r\n\r\n        this.add(b1);this.add(b2);this.add(b3);this.add(b4);\r\n    }\r\n\r\n    public selectBooks() : void {\r\n\r\n        if (this.size()>0)\r\n        {\r\n\r\n            let nbooks : SBook[] = [];  \r\n\r\n            for (let i : number=0; i<this.size(); i=i+1)\r\n            {\r\n                let book = this.get(i);\r\n                let author = book.author;\r\n                \r\n                if (author==\"Tolkien\"){\r\n                    nbooks.push(book);        \r\n                }\r\n            }            \r\n\r\n            this.books = nbooks;\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    public filtrBooks(filtrText : string) : void {\r\n\r\n        if (this.size()>0)\r\n        {\r\n\r\n            let filter = filtrText.toUpperCase();\r\n\r\n            let nbooks : SBook[] = [];  \r\n\r\n            for (let i : number=0; i<this.size(); i=i+1)\r\n            {\r\n                let book = this.get(i);\r\n                let author = book.author;\r\n                let title = book.title;\r\n                let text = author + \" \" + title;\r\n                text = text.toUpperCase();\r\n\r\n                if (text.includes(filter))\r\n                {\r\n                    nbooks.push(book);        \r\n                }\r\n            }            \r\n\r\n            this.books = nbooks;\r\n        }\r\n        \r\n    }\r\n\r\n    public addBook() : void {\r\n\r\n        let b = new SBook(\"Pan Tadeusz\",\"Mickiewicz\",\"345\");        \r\n        this.add(b);\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default SBookList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}