{"ast":null,"code":"class StringSet {\n  constructor() {\n    this.stringList = void 0;\n    this.stringList = [];\n  }\n  add(elem) {\n    this.stringList.push(elem);\n  }\n  member(elem) {\n    for (let i = 0; i < this.stringList.length; i = i + 1) {\n      let locElem = this.stringList[i];\n      if (locElem === elem) return true;\n    }\n    return false;\n  }\n  delete(elem) {\n    if (this.member(elem)) {\n      let locStringList = [];\n      for (let i = 0; i < this.stringList.length; i = i + 1) {\n        let locElem = this.stringList[i];\n        if (locElem != elem) {\n          locStringList.push(locElem);\n        }\n      }\n      this.stringList = locStringList;\n    }\n  }\n  getToString() {\n    return this.stringList.toString();\n  }\n}\nexport default StringSet;","map":{"version":3,"names":["StringSet","constructor","stringList","add","elem","push","member","i","length","locElem","delete","locStringList","getToString","toString"],"sources":["C:/SKRYPTY/KROSNO/TypeScript/ProjektTS/PrzykladyTSReact/myreactapp/src/testydialog/StringSet.tsx"],"sourcesContent":["class StringSet {\r\n\r\n    private stringList: string[];\r\n\r\n    constructor() {\r\n        this.stringList = [];\r\n    }\r\n\r\n    public add(elem: string): void {\r\n        this.stringList.push(elem);\r\n    }\r\n\r\n    public member(elem: string): boolean {\r\n        for (let i: number = 0; i < this.stringList.length; i = i + 1) {\r\n            let locElem = this.stringList[i];\r\n            if (locElem === elem) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public delete(elem: string): void {\r\n        if (this.member(elem)) {\r\n            let locStringList: string[] = [];\r\n            for (let i: number = 0; i < this.stringList.length; i = i + 1) {\r\n                let locElem = this.stringList[i];                \r\n                if (locElem != elem) {\r\n                    locStringList.push(locElem);\r\n                }\r\n            }\r\n            this.stringList = locStringList;            \r\n        }        \r\n    }\r\n\r\n    public getToString(): string {\r\n\r\n        return this.stringList.toString();      \r\n    }\r\n\r\n}\r\n\r\nexport default StringSet;\r\n"],"mappings":"AAAA,MAAMA,SAAS,CAAC;EAIZC,WAAW,GAAG;IAAA,KAFNC,UAAU;IAGd,IAAI,CAACA,UAAU,GAAG,EAAE;EACxB;EAEOC,GAAG,CAACC,IAAY,EAAQ;IAC3B,IAAI,CAACF,UAAU,CAACG,IAAI,CAACD,IAAI,CAAC;EAC9B;EAEOE,MAAM,CAACF,IAAY,EAAW;IACjC,KAAK,IAAIG,CAAS,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACL,UAAU,CAACM,MAAM,EAAED,CAAC,GAAGA,CAAC,GAAG,CAAC,EAAE;MAC3D,IAAIE,OAAO,GAAG,IAAI,CAACP,UAAU,CAACK,CAAC,CAAC;MAChC,IAAIE,OAAO,KAAKL,IAAI,EAAE,OAAO,IAAI;IACrC;IACA,OAAO,KAAK;EAChB;EAEOM,MAAM,CAACN,IAAY,EAAQ;IAC9B,IAAI,IAAI,CAACE,MAAM,CAACF,IAAI,CAAC,EAAE;MACnB,IAAIO,aAAuB,GAAG,EAAE;MAChC,KAAK,IAAIJ,CAAS,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACL,UAAU,CAACM,MAAM,EAAED,CAAC,GAAGA,CAAC,GAAG,CAAC,EAAE;QAC3D,IAAIE,OAAO,GAAG,IAAI,CAACP,UAAU,CAACK,CAAC,CAAC;QAChC,IAAIE,OAAO,IAAIL,IAAI,EAAE;UACjBO,aAAa,CAACN,IAAI,CAACI,OAAO,CAAC;QAC/B;MACJ;MACA,IAAI,CAACP,UAAU,GAAGS,aAAa;IACnC;EACJ;EAEOC,WAAW,GAAW;IAEzB,OAAO,IAAI,CAACV,UAAU,CAACW,QAAQ,EAAE;EACrC;AAEJ;AAEA,eAAeb,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}