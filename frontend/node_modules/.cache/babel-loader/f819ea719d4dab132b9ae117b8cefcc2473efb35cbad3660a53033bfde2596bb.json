{"ast":null,"code":"var _jsxFileName = \"C:\\\\Bazan_Fullstack-main\\\\frontend\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GetLatestScore() {\n  _s();\n  const backendUrl = 'http://localhost:8081';\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [countryOfBirth, setCountryOfBirth] = useState(\"\");\n  async function getScore() {\n    if (username.length > 0 && password.length > 0 && email.length > 0 && firstName.length > 0 && lastName.length > 0 && age.length > 0 && countryOfBirth.length > 0) {\n      await axios.post(`${backendUrl}/api/adduser`, {\n        username,\n        password,\n        email,\n        firstName,\n        lastName,\n        age,\n        countryOfBirth\n      }).then(response => {}).catch(err => {\n        let myerror = \"Błąd połaczenia sieciowego.\" + err;\n        setStatus(myerror);\n      });\n    } else {\n      setStatus(\"Żadna z danych wstawianego przelewu nie może być pusta\");\n    }\n  }\n  const handleSubmit = event => {\n    getScore();\n    event.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"auto\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [\" Username: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            value: username,\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 44\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), ' ', /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [\" Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 44\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), ' ', /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [\" Email: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 41\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), ' ', /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [\" First Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"firstName\",\n            value: firstName,\n            onChange: e => setFirstName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 46\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), ' ', /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [\" Last Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"lastName\",\n            value: lastName,\n            onChange: e => setLastName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 45\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), ' ', /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [\" Age: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"age\",\n            value: age,\n            onChange: e => setAge(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 39\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), ' ', /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [\" Country of Birth: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"countryOfBirth\",\n            value: countryOfBirth,\n            onChange: e => setCountryOfBirth(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 52\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"  Add user  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(GetLatestScore, \"pYWxjRjM7WxVSxWktAIKcHCqDcU=\");\n_c = GetLatestScore;\nvar _c;\n$RefreshReg$(_c, \"GetLatestScore\");","map":{"version":3,"names":["axios","React","useState","GetLatestScore","backendUrl","username","setUsername","password","setPassword","email","setEmail","firstName","setFirstName","lastName","setLastName","age","setAge","countryOfBirth","setCountryOfBirth","getScore","length","post","then","response","catch","err","myerror","setStatus","handleSubmit","event","preventDefault","e","target","value"],"sources":["C:/Bazan_Fullstack-main/frontend/src/components/Register.js"],"sourcesContent":["import axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState } from \"react\";\n\nexport default function GetLatestScore() {\n\n    const backendUrl = 'http://localhost:8081';\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [email, setEmail ] = useState(\"\");\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [age, setAge] = useState(\"\");\n    const [countryOfBirth, setCountryOfBirth] = useState(\"\");\n\n    async function getScore() {\n\n        if ((username.length > 0) && (password.length > 0) && (email.length > 0) && (firstName.length > 0) && (lastName.length > 0) && (age.length > 0) && (countryOfBirth.length > 0)) {\n\n            await axios.post(`${backendUrl}/api/adduser`,\n            { username, password, email, firstName, lastName, age, countryOfBirth} )\n\n                .then(response => {\n\n                }).catch(err => {\n\n                    let myerror = \"Błąd połaczenia sieciowego.\" + err;\n                    setStatus(myerror);\n\n                }\n\n            );\n\n        } else {\n\n            setStatus(\"Żadna z danych wstawianego przelewu nie może być pusta\");\n        }\n\n    }\n\n    const handleSubmit = (event) => {\n        getScore();\n        event.preventDefault();\n    }\n\n    return (\n\n        <div>\n\n            <Form onSubmit={handleSubmit}>\n\n                <Form.Group className=\"auto\" onSubmit={handleSubmit}>\n\n                    <Form.Label> Username: <input type=\"text\" name='username' value={username} onChange={(e) => setUsername(e.target.value)} /> </Form.Label>\n                    {' '}\n                    <Form.Label> Password: <input type=\"text\" name='password' value={password} onChange={(e) => setPassword(e.target.value)} /> </Form.Label>\n                    {' '}\n                    <Form.Label> Email: <input type=\"text\" name='email' value={email} onChange={(e) => setEmail(e.target.value)} /> </Form.Label>\n                    {' '}\n                    <Form.Label> First Name: <input type=\"text\" name='firstName' value={firstName} onChange={(e) => setFirstName(e.target.value)} /> </Form.Label>\n                    {' '}\n                    <Form.Label> Last Name: <input type=\"text\" name='lastName' value={lastName} onChange={(e) => setLastName(e.target.value)} /> </Form.Label>\n                    {' '}\n                    <Form.Label> Age: <input type=\"text\" name='age' value={age} onChange={(e) => setAge(e.target.value)} /> </Form.Label>\n                    {' '}\n                    <Form.Label> Country of Birth: <input type=\"text\" name='countryOfBirth' value={countryOfBirth} onChange={(e) => setCountryOfBirth(e.target.value)} /> </Form.Label>\n                    {' '}\n                    <Button variant=\"primary\" type=\"submit\">  Add user  </Button>\n\n                </Form.Group>\n\n                <p></p>\n\n            </Form >\n\n        </div>\n\n    );\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}