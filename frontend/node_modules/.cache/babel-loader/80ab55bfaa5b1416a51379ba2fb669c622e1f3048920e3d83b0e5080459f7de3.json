{"ast":null,"code":"var _jsxFileName = \"C:\\\\Bazan_Fullstack-main\\\\frontend\\\\src\\\\components\\\\AddHiraganaScore.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddHiraganaScore() {\n  _s();\n  const backendUrl = 'http://localhost:8081';\n  const [status, setStatus] = useState(\"OK\");\n  const [textArea, setTextArea] = useState(\"Brak danych\");\n  const [newUsername, setNewUsername] = useState(\"Wolololo\");\n  const [newHiraganaScore, setNewHiraganaScore] = useState(\"46\");\n  let userName = localStorage.getItem('userName');\n  let password = localStorage.getItem('password');\n  let score = localStorage.getItem('score');\n\n  //Dodanie przelewu na serwer\n  async function addHiraganaScore() {\n    let username = userName;\n    let hiraganaScore = score;\n    if (username.length > 0 && hiraganaScore.length > 0) {\n      await axios.post(`${backendUrl}/api/v1/addhiraganascore/`, {\n        username,\n        hiraganaScore\n      }).then(response => {\n        let text = response.data;\n        setStatus(text);\n      }).catch(err => {\n        let myerror = \"Błąd połaczenia sieciowego.\" + err;\n        setStatus(myerror);\n      });\n    } else {\n      setStatus(\"Żadna z danych wstawianego przelewu nie może być pusta\");\n    }\n  }\n  const handleSubmit = event => {\n    addHiraganaScore();\n    event.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"auto\",\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"  Dodaj  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      as: \"textarea\",\n      rows: 8,\n      type: \"text\",\n      value: textArea,\n      placeholder: \"\",\n      onChange: e => setTextArea(e.target.value),\n      spellCheck: \"false\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(AddHiraganaScore, \"3CTm8X5PLXU+GVlAKHfSwlrrjg4=\");\n_c = AddHiraganaScore;\nvar _c;\n$RefreshReg$(_c, \"AddHiraganaScore\");","map":{"version":3,"names":["axios","React","useState","Button","Container","Form","AddHiraganaScore","backendUrl","status","setStatus","textArea","setTextArea","newUsername","setNewUsername","newHiraganaScore","setNewHiraganaScore","userName","localStorage","getItem","password","score","addHiraganaScore","username","hiraganaScore","length","post","then","response","text","data","catch","err","myerror","handleSubmit","event","preventDefault","e","target","value"],"sources":["C:/Bazan_Fullstack-main/frontend/src/components/AddHiraganaScore.js"],"sourcesContent":["import axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useState } from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nexport default function AddHiraganaScore() {\r\n\r\n    const backendUrl = 'http://localhost:8081';\r\n    const [status, setStatus] = useState(\"OK\");\r\n    const [textArea, setTextArea] = useState(\"Brak danych\");\r\n    const [newUsername, setNewUsername] = useState(\"Wolololo\");\r\n    const [newHiraganaScore, setNewHiraganaScore] = useState(\"46\");\r\n\r\n    let userName = localStorage.getItem('userName');\r\n    let password = localStorage.getItem('password');\r\n    let score = localStorage.getItem('score');\r\n\r\n\r\n    //Dodanie przelewu na serwer\r\n    async function addHiraganaScore() {\r\n\r\n        let username = userName;\r\n        let hiraganaScore = score;\r\n\r\n\r\n        if ((username.length > 0) && (hiraganaScore.length > 0)) {\r\n            await axios.post(`${backendUrl}/api/v1/addhiraganascore/`,\r\n                { username, hiraganaScore },\r\n            )\r\n                .then(response => {\r\n                    let text = response.data;\r\n                    setStatus(text);\r\n                }).catch(err => {\r\n                    let myerror = \"Błąd połaczenia sieciowego.\" + err;\r\n                    setStatus(myerror);\r\n                });\r\n        }\r\n        else {\r\n            setStatus(\"Żadna z danych wstawianego przelewu nie może być pusta\");\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        addHiraganaScore();\r\n        event.preventDefault();\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <Container>\r\n\r\n\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group className=\"auto\" onSubmit={handleSubmit}>\r\n                    <Button variant=\"primary\" type=\"submit\">  Dodaj  </Button>\r\n                </Form.Group>\r\n                <p></p>\r\n            </Form >\r\n\r\n            <p></p>\r\n\r\n            <Form.Control as=\"textarea\" rows={8} type=\"text\" value={textArea} placeholder=\"\" onChange={(e) => setTextArea(e.target.value)} spellCheck=\"false\" />\r\n\r\n            <p></p>\r\n\r\n\r\n        </Container>\r\n\r\n    );\r\n\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,sCAAsC;AAC7C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,IAAI,MAAM,sBAAsB;AAAC;AAExC,eAAe,SAASC,gBAAgB,GAAG;EAAA;EAEvC,MAAMC,UAAU,GAAG,uBAAuB;EAC1C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,aAAa,CAAC;EACvD,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,UAAU,CAAC;EAC1D,MAAM,CAACY,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE9D,IAAIc,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EAC/C,IAAIC,QAAQ,GAAGF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EAC/C,IAAIE,KAAK,GAAGH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;;EAGzC;EACA,eAAeG,gBAAgB,GAAG;IAE9B,IAAIC,QAAQ,GAAGN,QAAQ;IACvB,IAAIO,aAAa,GAAGH,KAAK;IAGzB,IAAKE,QAAQ,CAACE,MAAM,GAAG,CAAC,IAAMD,aAAa,CAACC,MAAM,GAAG,CAAE,EAAE;MACrD,MAAMxB,KAAK,CAACyB,IAAI,CAAE,GAAElB,UAAW,2BAA0B,EACrD;QAAEe,QAAQ;QAAEC;MAAc,CAAC,CAC9B,CACIG,IAAI,CAACC,QAAQ,IAAI;QACd,IAAIC,IAAI,GAAGD,QAAQ,CAACE,IAAI;QACxBpB,SAAS,CAACmB,IAAI,CAAC;MACnB,CAAC,CAAC,CAACE,KAAK,CAACC,GAAG,IAAI;QACZ,IAAIC,OAAO,GAAG,6BAA6B,GAAGD,GAAG;QACjDtB,SAAS,CAACuB,OAAO,CAAC;MACtB,CAAC,CAAC;IACV,CAAC,MACI;MACDvB,SAAS,CAAC,wDAAwD,CAAC;IACvE;EACJ;EAEA,MAAMwB,YAAY,GAAIC,KAAK,IAAK;IAC5Bb,gBAAgB,EAAE;IAClBa,KAAK,CAACC,cAAc,EAAE;EAC1B,CAAC;EAGD,oBAEI,QAAC,SAAS;IAAA,wBAGN,QAAC,IAAI;MAAC,QAAQ,EAAEF,YAAa;MAAA,wBACzB,QAAC,IAAI,CAAC,KAAK;QAAC,SAAS,EAAC,MAAM;QAAC,QAAQ,EAAEA,YAAa;QAAA,uBAChD,QAAC,MAAM;UAAC,OAAO,EAAC,SAAS;UAAC,IAAI,EAAC,QAAQ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAmB;QAAA;QAAA;QAAA;MAAA,QACjD,eACb;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QACH,eAER;MAAA;MAAA;MAAA;IAAA,QAAO,eAEP,QAAC,IAAI,CAAC,OAAO;MAAC,EAAE,EAAC,UAAU;MAAC,IAAI,EAAE,CAAE;MAAC,IAAI,EAAC,MAAM;MAAC,KAAK,EAAEvB,QAAS;MAAC,WAAW,EAAC,EAAE;MAAC,QAAQ,EAAG0B,CAAC,IAAKzB,WAAW,CAACyB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAAC,UAAU,EAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG,eAEpJ;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QAGC;AAIpB;AAAC,GAlEuBhC,gBAAgB;AAAA,KAAhBA,gBAAgB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}