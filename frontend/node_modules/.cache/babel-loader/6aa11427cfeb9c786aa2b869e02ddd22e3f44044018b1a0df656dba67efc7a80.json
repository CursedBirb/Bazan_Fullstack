{"ast":null,"code":"var _jsxFileName = \"C:\\\\SKRYPTY\\\\KROSNO\\\\Modern programming techniques\\\\DRUGI_SEMESTR_2023\\\\JavaScript2023\\\\PrzykladyJSReact2023\\\\myreactapp\\\\src\\\\pdatabasehook\\\\PDatabaseAppHook.js\",\n  _s = $RefreshSig$();\nimport React, { Component, useState } from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport Table from 'react-bootstrap/Table';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Footer from \"./footer\";\nimport Header from \"./header\";\nimport PersonDescriptionHook from \"./PersonDescriptionHook\";\nimport SPerson from \"./SPerson\";\nimport SPersonList from \"./SPersonList\";\nimport ReadPersonHook from \"./ReadPersonHook\";\nimport DeletePersonHook from \"./DeletePersonHook\";\n\n//Baza danych osób w pamięci RAM oparta na 4 głównych komponentach klasowych (PDatabaseAppHook, PersonDescriptionHook, ReadPersonHook, DeletePersonHook)\n//Korzysta także z 2 kompotentów pomocniczych:  Header i Footer\n//Pokazuje obsługę bazy danych w aplikacji typu SPA\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PDatabaseAppHook() {\n  _s();\n  let pList = new SPersonList();\n  pList.build();\n  const [personList, setPersonList] = useState(pList);\n  const [status, setStatus] = useState(\"Start\");\n  const [isError, setIsError] = useState(false);\n  function addNewPerson(p) {\n    personList.add(p);\n\n    /*\r\n    this.setState((prevState) => ({\r\n        personList: prevState.personList,\r\n        status: \"Dodano osobę: \" + p.firstname + \" \" + p.lastname,\r\n        isError: false\r\n    }));\r\n    */\n  }\n\n  function deletePerson(email) {\n    let result = personList.deletePerson(email);\n    /*\r\n    if (!result) {\r\n        this.setState((prevState) => ({                \r\n            status: \"Brak osoby o adresie email: \" + email,\r\n            isError: true\r\n        }));\r\n    }\r\n    else {\r\n        this.setState((prevState) => ({\r\n            personList: prevState.personList,\r\n            status: \"Usunieto osobę o adresie email: \" + email,\r\n            isError: false\r\n        }));\r\n    }\r\n    */\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), !isError && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"success\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"Status: \", status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 52\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 26\n    }, this), isError && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"Status: \", status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 50\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Imi\\u0119\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nazwisko\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Wiek\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: personList.personList.map((lperson, index) => /*#__PURE__*/_jsxDEV(PersonDescription, {\n          email: lperson.email,\n          firstname: lperson.firstname,\n          lastname: lperson.lastname,\n          age: lperson.age\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReadPerson, {\n      callback: addNewPerson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DeletePerson, {\n      callback: deletePerson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(PDatabaseAppHook, \"XDx2SWLcKlPb+Rf9Y0JXdB+QcgQ=\");\n_c = PDatabaseAppHook;\nvar _c;\n$RefreshReg$(_c, \"PDatabaseAppHook\");","map":{"version":3,"names":["React","Component","useState","Container","Table","Form","Alert","Footer","Header","PersonDescriptionHook","SPerson","SPersonList","ReadPersonHook","DeletePersonHook","PDatabaseAppHook","pList","build","personList","setPersonList","status","setStatus","isError","setIsError","addNewPerson","p","add","deletePerson","email","result","map","lperson","index","firstname","lastname","age"],"sources":["C:/SKRYPTY/KROSNO/Modern programming techniques/DRUGI_SEMESTR_2023/JavaScript2023/PrzykladyJSReact2023/myreactapp/src/pdatabasehook/PDatabaseAppHook.js"],"sourcesContent":["import React, { Component, useState } from \"react\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Table from 'react-bootstrap/Table'; \r\nimport Form from 'react-bootstrap/Form';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport Footer from \"./footer\";\r\nimport Header from \"./header\";\r\nimport PersonDescriptionHook from \"./PersonDescriptionHook\";\r\n\r\nimport SPerson from \"./SPerson\"\r\nimport SPersonList from \"./SPersonList\"\r\nimport ReadPersonHook from \"./ReadPersonHook\"\r\nimport DeletePersonHook from \"./DeletePersonHook\"\r\n\r\n\r\n//Baza danych osób w pamięci RAM oparta na 4 głównych komponentach klasowych (PDatabaseAppHook, PersonDescriptionHook, ReadPersonHook, DeletePersonHook)\r\n//Korzysta także z 2 kompotentów pomocniczych:  Header i Footer\r\n//Pokazuje obsługę bazy danych w aplikacji typu SPA\r\n\r\n\r\n\r\n\r\nexport default function PDatabaseAppHook() {\r\n\r\n\r\n    let pList = new SPersonList();\r\n    pList.build();\r\n    const [personList, setPersonList] = useState(pList);\r\n    const [status, setStatus] = useState(\"Start\");\r\n    const [isError, setIsError] = useState(false);\r\n\r\n\r\n    function addNewPerson(p) {\r\n\r\n        personList.add(p);\r\n\r\n        /*\r\n        this.setState((prevState) => ({\r\n            personList: prevState.personList,\r\n            status: \"Dodano osobę: \" + p.firstname + \" \" + p.lastname,\r\n            isError: false\r\n        }));\r\n        */\r\n    }\r\n\r\n    function deletePerson(email) {\r\n\r\n        let result = personList.deletePerson(email);\r\n        /*\r\n        if (!result) {\r\n            this.setState((prevState) => ({                \r\n                status: \"Brak osoby o adresie email: \" + email,\r\n                isError: true\r\n            }));\r\n        }\r\n        else {\r\n            this.setState((prevState) => ({\r\n                personList: prevState.personList,\r\n                status: \"Usunieto osobę o adresie email: \" + email,\r\n                isError: false\r\n            }));\r\n        }\r\n        */\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Header />\r\n\r\n            {!isError && <Alert variant=\"success\"> <strong>Status: {status}</strong> </Alert>}\r\n            {isError && <Alert variant=\"danger\"> <strong>Status: {status}</strong> </Alert>}\r\n\r\n\r\n            <Table striped bordered>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Email</th>\r\n                        <th>Imię</th>\r\n                        <th>Nazwisko</th>\r\n                        <th>Wiek</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {personList.personList.map((lperson, index) => (\r\n                        <PersonDescription email={lperson.email} firstname={lperson.firstname} lastname={lperson.lastname} age={lperson.age} />\r\n                    ))}\r\n                </tbody>\r\n            </Table>\r\n\r\n            <ReadPerson callback={addNewPerson} />\r\n\r\n            <DeletePerson callback={deletePerson} />\r\n\r\n            <Footer />\r\n        </Container>\r\n    );\r\n\r\n\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}