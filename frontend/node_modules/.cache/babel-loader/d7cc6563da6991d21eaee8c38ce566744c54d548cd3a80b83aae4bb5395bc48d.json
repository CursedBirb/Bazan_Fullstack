{"ast":null,"code":"var _jsxFileName = \"C:\\\\Bazan_Fullstack-main\\\\frontend\\\\src\\\\components\\\\GetLastestScore.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GetLatestScore() {\n  _s();\n  const backendUrl = 'http://localhost:8081';\n  const [status, setStatus] = useState(\"OK\");\n  const [textArea, setTextArea] = useState(\"Tu powinna być zawartość bazy danych, ale jak nie to mi wciąż nie działa\");\n  const [wynik, setWynik] = useState(\"\");\n  const [, forceUpdate] = useState();\n  var username = localStorage.getItem('userName');\n  var password = localStorage.getItem('password');\n  async function getScore() {\n    // await axios.post(`${backendUrl}/api/v1/getlatestscore/`\n    // await axios.post(`${backendUrl}/api/v1/getlatestscore/`,\n    await axios.post(`${backendUrl}/api/getscore/`, {\n      username,\n      password\n    }).then(response => {\n      console.log(response.data);\n      if (response.data.length > 0) {\n        const e = response.data[0];\n        let lid = e.id;\n        let lusername = e.username;\n        let lhiraganaScore1 = e.hiraganaScore1;\n        let lhiraganaScore2 = e.hiraganaScore2;\n        let lhiraganaScore3 = e.hiraganaScore3;\n        let lkatakanaScore1 = e.katakanaScore1;\n        let lkatakanaScore2 = e.katakanaScore2;\n        let lkatakanaScore3 = e.katakanaScore3;\n        let scoresListText = \"\";\n        scoresListText = `${lid}, ${lusername}, ${lhiraganaScore1}, ${lhiraganaScore2}, ${lhiraganaScore3}, ${lkatakanaScore1}, ${lkatakanaScore2}, ${lkatakanaScore3}\\n`;\n        setTextArea(scoresListText);\n        setStatus(\"OK\");\n        setWynik(scoresListText);\n        console.log(wynik);\n      }\n    }).catch(err => {\n      let myerror = \"Błąd połaczenia sieciowego.\" + err;\n      setStatus(myerror);\n    });\n  }\n  useEffect(() => {\n    // Tu możesz dodać inne efekty uboczne, jeśli są potrzebne\n  }, [wynik]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getScore,\n      children: \"Get your all scores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: wynik\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this)\n\n  // <Container>\n\n  //     <Button variant=\"primary\" onClick={getScore}>  Odczytaj aktualną listę przelewów  </Button>\n\n  //     <p></p>\n\n  //     <Form.Control as=\"textarea\" rows={8} type=\"text\" value={textArea} placeholder=\"\" onChange={(e) => setTextArea(e.target.value)} spellCheck=\"false\" />\n\n  //     <p></p>\n\n  // </Container>\n  ;\n}\n_s(GetLatestScore, \"v9Nn16l0h95NLu+Nc+tmhIkOerE=\");\n_c = GetLatestScore;\nvar _c;\n$RefreshReg$(_c, \"GetLatestScore\");","map":{"version":3,"names":["axios","React","useEffect","useState","GetLatestScore","backendUrl","status","setStatus","textArea","setTextArea","wynik","setWynik","forceUpdate","username","localStorage","getItem","password","getScore","post","then","response","console","log","data","length","e","lid","id","lusername","lhiraganaScore1","hiraganaScore1","lhiraganaScore2","hiraganaScore2","lhiraganaScore3","hiraganaScore3","lkatakanaScore1","katakanaScore1","lkatakanaScore2","katakanaScore2","lkatakanaScore3","katakanaScore3","scoresListText","catch","err","myerror"],"sources":["C:/Bazan_Fullstack-main/frontend/src/components/GetLastestScore.js"],"sourcesContent":["import axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nexport default function GetLatestScore() {\r\n\r\n    const backendUrl = 'http://localhost:8081';\r\n    const [status, setStatus] = useState(\"OK\");\r\n    const [textArea, setTextArea] = useState(\"Tu powinna być zawartość bazy danych, ale jak nie to mi wciąż nie działa\");\r\n    const [wynik, setWynik] = useState(\"\");\r\n    const [, forceUpdate] = useState();\r\n\r\n    var username = localStorage.getItem('userName');\r\n    var password = localStorage.getItem('password');\r\n\r\n    async function getScore() {\r\n\r\n        // await axios.post(`${backendUrl}/api/v1/getlatestscore/`\r\n        // await axios.post(`${backendUrl}/api/v1/getlatestscore/`,\r\n        await axios.post(`${backendUrl}/api/getscore/`,\r\n        { username, password } )\r\n            .then(response => {\r\n                console.log(response.data); \r\n\r\n                if (response.data.length > 0) {\r\n\r\n                    const e = response.data[0];\r\n                    \r\n                    let lid = e.id;\r\n                    let lusername = e.username;\r\n                    let lhiraganaScore1 = e.hiraganaScore1;\r\n                    let lhiraganaScore2 = e.hiraganaScore2;\r\n                    let lhiraganaScore3 = e.hiraganaScore3;\r\n                    let lkatakanaScore1 = e.katakanaScore1;\r\n                    let lkatakanaScore2 = e.katakanaScore2;\r\n                    let lkatakanaScore3 = e.katakanaScore3;\r\n\r\n                    let scoresListText = \"\";\r\n\r\n\r\n                    scoresListText = `${lid}, ${lusername}, ${lhiraganaScore1}, ${lhiraganaScore2}, ${lhiraganaScore3}, ${lkatakanaScore1}, ${lkatakanaScore2}, ${lkatakanaScore3}\\n`;\r\n                    setTextArea(scoresListText);\r\n                    setStatus(\"OK\");\r\n                    setWynik(scoresListText);\r\n                    console.log(wynik);\r\n\r\n                }\r\n\r\n            }).catch(err => {\r\n\r\n                let myerror = \"Błąd połaczenia sieciowego.\" + err;\r\n                setStatus(myerror);\r\n            });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        // Tu możesz dodać inne efekty uboczne, jeśli są potrzebne\r\n    }, [wynik]);\r\n\r\n    return (\r\n\r\n        <div >\r\n\r\n            <button onClick={getScore}>Get your all scores</button>\r\n            <p>{wynik}</p>\r\n            <p></p>\r\n\r\n            \r\n\r\n        </div>\r\n\r\n        // <Container>\r\n\r\n        //     <Button variant=\"primary\" onClick={getScore}>  Odczytaj aktualną listę przelewów  </Button>\r\n\r\n        //     <p></p>\r\n\r\n        //     <Form.Control as=\"textarea\" rows={8} type=\"text\" value={textArea} placeholder=\"\" onChange={(e) => setTextArea(e.target.value)} spellCheck=\"false\" />\r\n\r\n        //     <p></p>\r\n\r\n        // </Container>\r\n\r\n    );\r\n\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,sCAAsC;AAC7C,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAEnD,eAAe,SAASC,cAAc,GAAG;EAAA;EAErC,MAAMC,UAAU,GAAG,uBAAuB;EAC1C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,0EAA0E,CAAC;EACpH,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,GAAGS,WAAW,CAAC,GAAGT,QAAQ,EAAE;EAElC,IAAIU,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EAC/C,IAAIC,QAAQ,GAAGF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EAE/C,eAAeE,QAAQ,GAAG;IAEtB;IACA;IACA,MAAMjB,KAAK,CAACkB,IAAI,CAAE,GAAEb,UAAW,gBAAe,EAC9C;MAAEQ,QAAQ;MAAEG;IAAS,CAAC,CAAE,CACnBG,IAAI,CAACC,QAAQ,IAAI;MACdC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;MAE1B,IAAIH,QAAQ,CAACG,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;QAE1B,MAAMC,CAAC,GAAGL,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;QAE1B,IAAIG,GAAG,GAAGD,CAAC,CAACE,EAAE;QACd,IAAIC,SAAS,GAAGH,CAAC,CAACZ,QAAQ;QAC1B,IAAIgB,eAAe,GAAGJ,CAAC,CAACK,cAAc;QACtC,IAAIC,eAAe,GAAGN,CAAC,CAACO,cAAc;QACtC,IAAIC,eAAe,GAAGR,CAAC,CAACS,cAAc;QACtC,IAAIC,eAAe,GAAGV,CAAC,CAACW,cAAc;QACtC,IAAIC,eAAe,GAAGZ,CAAC,CAACa,cAAc;QACtC,IAAIC,eAAe,GAAGd,CAAC,CAACe,cAAc;QAEtC,IAAIC,cAAc,GAAG,EAAE;QAGvBA,cAAc,GAAI,GAAEf,GAAI,KAAIE,SAAU,KAAIC,eAAgB,KAAIE,eAAgB,KAAIE,eAAgB,KAAIE,eAAgB,KAAIE,eAAgB,KAAIE,eAAgB,IAAG;QACjK9B,WAAW,CAACgC,cAAc,CAAC;QAC3BlC,SAAS,CAAC,IAAI,CAAC;QACfI,QAAQ,CAAC8B,cAAc,CAAC;QACxBpB,OAAO,CAACC,GAAG,CAACZ,KAAK,CAAC;MAEtB;IAEJ,CAAC,CAAC,CAACgC,KAAK,CAACC,GAAG,IAAI;MAEZ,IAAIC,OAAO,GAAG,6BAA6B,GAAGD,GAAG;MACjDpC,SAAS,CAACqC,OAAO,CAAC;IACtB,CAAC,CAAC;EAEV;EAEA1C,SAAS,CAAC,MAAM;IACZ;EAAA,CACH,EAAE,CAACQ,KAAK,CAAC,CAAC;EAEX,oBAEI;IAAA,wBAEI;MAAQ,OAAO,EAAEO,QAAS;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA6B,eACvD;MAAA,UAAIP;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK,eACd;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA;;EAMX;;EAEA;;EAEA;;EAEA;;EAEA;;EAEA;EAAA;AAIR;AAAC,GAlFuBN,cAAc;AAAA,KAAdA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}