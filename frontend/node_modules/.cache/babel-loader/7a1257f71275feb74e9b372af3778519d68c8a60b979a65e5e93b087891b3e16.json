{"ast":null,"code":"var _jsxFileName = \"C:\\\\Bazan_Fullstack-main\\\\frontend\\\\src\\\\components\\\\GetHiraganaRomajiAndImage.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GetHiraganaRomajiAndImage() {\n  _s();\n  const backendUrl = 'http://localhost:8081';\n  const [targetNumberOfLetter, setTargetNumberOfLetter] = useState(1);\n  const [status, setStatus] = useState(\"OK\");\n  const [image, setImage] = useState(\"Brak Zdjęcia\");\n  const [romaji, setRomaji] = useState(\"Brak Litery\");\n  const [score, setScore] = useState(0);\n  const [wolololo] = useState(\"Wolololo\");\n  const [buttons, setButtons] = useState([\"Wolololo\", \"No Wolololo\", \"Would Wolololo\", \"Will Wolololo\"]);\n  const [correctAnswer, setCorrectAnswer] = useState(0);\n  const [answer, setAnswer] = useState(\"\");\n  const [wasClicked, setWasClicked] = useState(false);\n  const randomCorrectAnswer = Math.floor(Math.random() * 4);\n  const randomWrongAnswer = Math.floor(Math.random() * 46) + 1;\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.post(`${backendUrl}/api/v1/gethiraganarecord/`);\n        console.log(response.data);\n        let idFound = false;\n        response.data.forEach(e => {\n          let lid = e.id;\n          let lhiraganaRomaji = e.hiraganaRomaji;\n          let lhiraganaImage = e.hiraganaImage;\n          let firstPartText = lhiraganaRomaji.substring(0, \"ERROR:\".length);\n          if (firstPartText !== \"ERROR:\" && parseInt(lid, 10) === targetNumberOfLetter) {\n            setStatus(\"OK\");\n            setRomaji(`${lhiraganaRomaji}`);\n            setImage(`${lhiraganaImage}`);\n            idFound = true;\n          } else if (firstPartText === \"ERROR:\" && parseInt(lid, 10) === targetNumberOfLetter) {\n            let secondPartText = lhiraganaRomaji.substring(\"ERROR:\".length, lhiraganaRomaji.length);\n            setStatus(secondPartText);\n            setRomaji(secondPartText);\n            idFound = true;\n          }\n        });\n        if (!idFound) {\n          setStatus(\"Id nie znaleziono\");\n        }\n      } catch (err) {\n        let myerror = \"Błąd połączenia sieciowego.\" + err;\n        setStatus(myerror);\n      }\n    };\n    fetchData();\n  }, [targetNumberOfLetter]);\n  useEffect(() => {\n    const initializeValues = () => {\n      setAnswer(\"\");\n      setCorrectAnswer(randomCorrectAnswer);\n      const newButtons = [...buttons];\n      newButtons[correctAnswer] = romaji;\n      setButtons(newButtons);\n      console.log(newButtons);\n      console.log(score);\n    };\n    initializeValues();\n  }, [correctAnswer, romaji, buttons, score]);\n  const incrementTarget = () => {\n    setTargetNumberOfLetter(prevTarget => prevTarget + 1);\n    setScore(prevTarget => prevTarget + 1);\n  };\n  const checkIfCorrectAnswer = index => {\n    console.log(correctAnswer);\n    console.log(wasClicked);\n    if (index === correctAnswer) {\n      setAnswer(\"Prawidłowa odpowiedź\");\n    } else if (index !== correctAnswer) {\n      setAnswer(\"Nieprawidłowa odpowiedź\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: incrementTarget,\n      children: \"Pobierz Wynik\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: targetNumberOfLetter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: romaji\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }, this), buttons.map((button, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => checkIfCorrectAnswer(index),\n      children: button\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: answer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n_s(GetHiraganaRomajiAndImage, \"k99iDlfzTRUDuCuNMsSo8W4BOZc=\");\n_c = GetHiraganaRomajiAndImage;\nvar _c;\n$RefreshReg$(_c, \"GetHiraganaRomajiAndImage\");","map":{"version":3,"names":["axios","React","useEffect","useState","GetHiraganaRomajiAndImage","backendUrl","targetNumberOfLetter","setTargetNumberOfLetter","status","setStatus","image","setImage","romaji","setRomaji","score","setScore","wolololo","buttons","setButtons","correctAnswer","setCorrectAnswer","answer","setAnswer","wasClicked","setWasClicked","randomCorrectAnswer","Math","floor","random","randomWrongAnswer","fetchData","response","post","console","log","data","idFound","forEach","e","lid","id","lhiraganaRomaji","hiraganaRomaji","lhiraganaImage","hiraganaImage","firstPartText","substring","length","parseInt","secondPartText","err","myerror","initializeValues","newButtons","incrementTarget","prevTarget","checkIfCorrectAnswer","index","map","button"],"sources":["C:/Bazan_Fullstack-main/frontend/src/components/GetHiraganaRomajiAndImage.js"],"sourcesContent":["import axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useEffect, useState } from \"react\";\n\nexport default function GetHiraganaRomajiAndImage() {\n\n    const backendUrl = 'http://localhost:8081';\n    const [targetNumberOfLetter, setTargetNumberOfLetter] = useState(1);\n    const [status, setStatus] = useState(\"OK\");\n    const [image, setImage] = useState(\"Brak Zdjęcia\");\n    const [romaji, setRomaji] = useState(\"Brak Litery\");\n    const [score, setScore] = useState(0);\n    const [wolololo] = useState(\"Wolololo\");\n    const [buttons, setButtons] = useState([\"Wolololo\", \"No Wolololo\", \"Would Wolololo\", \"Will Wolololo\"]);\n    const [correctAnswer, setCorrectAnswer] = useState(0);\n    const [answer, setAnswer] = useState(\"\");\n    const [wasClicked, setWasClicked] = useState(false);\n    const randomCorrectAnswer = Math.floor(Math.random() * 4);\n    const randomWrongAnswer = Math.floor(Math.random() * 46) +1;\n\n    useEffect(() => {\n        const fetchData = async () => {\n          try {\n            const response = await axios.post(`${backendUrl}/api/v1/gethiraganarecord/`);\n            console.log(response.data);\n            let idFound = false;\n    \n            response.data.forEach((e) => {\n              let lid = e.id;\n              let lhiraganaRomaji = e.hiraganaRomaji;\n              let lhiraganaImage = e.hiraganaImage;\n    \n              let firstPartText = lhiraganaRomaji.substring(0, \"ERROR:\".length);\n    \n              if (firstPartText !== \"ERROR:\" && parseInt(lid, 10) === targetNumberOfLetter) {\n                setStatus(\"OK\");\n                setRomaji(`${lhiraganaRomaji}`);\n                setImage(`${lhiraganaImage}`);\n                idFound = true;\n              } else if (firstPartText === \"ERROR:\" && parseInt(lid, 10) === targetNumberOfLetter) {\n                let secondPartText = lhiraganaRomaji.substring(\"ERROR:\".length, lhiraganaRomaji.length);\n                setStatus(secondPartText);\n                setRomaji(secondPartText);\n                idFound = true;\n              }\n            });\n    \n            if (!idFound) {\n              setStatus(\"Id nie znaleziono\");\n            }\n          } catch (err) {\n            let myerror = \"Błąd połączenia sieciowego.\" + err;\n            setStatus(myerror);\n          }\n        };\n    \n        fetchData();\n      }, [targetNumberOfLetter]);\n    \n      useEffect(() => {\n        const initializeValues = () => {\n          setAnswer(\"\");\n          setCorrectAnswer(randomCorrectAnswer);\n          const newButtons = [...buttons];\n          newButtons[correctAnswer] = romaji;\n          setButtons(newButtons);\n    \n          console.log(newButtons);\n          console.log(score);\n        };\n    \n        initializeValues();\n      }, [correctAnswer, romaji, buttons, score]);\n    \n      const incrementTarget = () => {\n        setTargetNumberOfLetter((prevTarget) => prevTarget + 1);\n        setScore((prevTarget) => prevTarget + 1);\n      };\n    \n      const checkIfCorrectAnswer = (index) => {\n        console.log(correctAnswer);\n        console.log(wasClicked);\n    \n        if (index === correctAnswer) {\n          setAnswer(\"Prawidłowa odpowiedź\");\n        } else if (index !== correctAnswer) {\n          setAnswer(\"Nieprawidłowa odpowiedź\");\n        }\n      };\n    \n      return (\n        <div>\n          <button onClick={incrementTarget}>Pobierz Wynik</button>\n          <p>{targetNumberOfLetter}</p>\n          <p>{status}</p>\n          <p>{romaji}</p>\n          <p>{image}</p>\n    \n          {buttons.map((button, index) => (\n            <button key={index} onClick={() => checkIfCorrectAnswer(index)}>\n              {button}\n            </button>\n          ))}\n    \n          <p>{answer}</p>\n        </div>\n      );\n    }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}