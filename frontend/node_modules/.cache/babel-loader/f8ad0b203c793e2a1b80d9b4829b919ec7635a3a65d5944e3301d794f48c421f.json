{"ast":null,"code":"var _jsxFileName = \"C:\\\\Bazan_Fullstack-main\\\\frontend\\\\src\\\\components\\\\AddHiraganaScore.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState } from \"react\";\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddHiraganaScore() {\n  _s();\n  const [status, setStatus] = useState(\"OK\");\n  const [textArea, setTextArea] = useState(\"Brak danych\");\n  const [newClientname, setNewClientname] = useState(\"nowak\");\n  const [newDate, setNewDate] = useState(\"2022-10-30\");\n  const [newDescription, setNewDescription] = useState(\"Zakup USD\");\n  const [newAmount, setNewAmount] = useState(\"345.1\");\n  const [transferIDToDelete, setTransferIDToDelete] = useState(\"1\");\n\n  //Dodanie przelewu na serwer\n  async function addHiraganaScore() {\n    let clientname = newClientname;\n    let date = newDate;\n    let description = newDescription;\n    let amount = newAmount;\n    let username = newUsername;\n    let hiraganaScore = newHiraganaScore;\n    if (username.length > 0 && hiraganaScore.length > 0) {\n      await axios.post('http://localhost:8081/addtransfer/', {\n        username,\n        hiraganaScore\n      } //Podajemy parametry\n      ).then(response => {\n        let text = response.data;\n        setStatus(text);\n      }).catch(err => {\n        let myerror = \"Błąd połaczenia sieciowego.\" + err;\n        setStatus(myerror);\n      });\n    } else {\n      setStatus(\"Żadna z danych wstawianego przelewu nie może być pusta\");\n    }\n  }\n  const handleSubmit = event => {\n    addHiraganaScore();\n    event.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"info\",\n      children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Klient dost\\u0119pu do przelew\\xF3w w banku z u\\u017Cyciem REST (bez autoryzacji, HOOK) \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 32\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), \"Lokalizacja bazy: http://localhost:8081/\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Status: \", status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n      children: \" Dane nowego przelewu: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"auto\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [\" Klient: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"newUsername\",\n            value: newUsername,\n            onChange: e => setNewUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 42\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), ' ', /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [\" Data przelewu: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"newHiraganaScore\",\n            value: newHiraganaScore,\n            onChange: e => setNewHiraganaScore(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 49\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"  Dodaj  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      as: \"textarea\",\n      rows: 8,\n      type: \"text\",\n      value: textArea,\n      placeholder: \"\",\n      onChange: e => setTextArea(e.target.value),\n      spellCheck: \"false\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(AddHiraganaScore, \"TnHN9cmlDoXonTzl/mqcG5m2oNo=\");\n_c = AddHiraganaScore;\nvar _c;\n$RefreshReg$(_c, \"AddHiraganaScore\");","map":{"version":3,"names":["axios","React","useState","Alert","Button","Container","Form","AddHiraganaScore","status","setStatus","textArea","setTextArea","newClientname","setNewClientname","newDate","setNewDate","newDescription","setNewDescription","newAmount","setNewAmount","transferIDToDelete","setTransferIDToDelete","addHiraganaScore","clientname","date","description","amount","username","newUsername","hiraganaScore","newHiraganaScore","length","post","then","response","text","data","catch","err","myerror","handleSubmit","event","preventDefault","e","setNewUsername","target","value","setNewHiraganaScore"],"sources":["C:/Bazan_Fullstack-main/frontend/src/components/AddHiraganaScore.js"],"sourcesContent":["import axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState } from \"react\";\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\n\nexport default function AddHiraganaScore() {\n\n    const [status, setStatus] = useState(\"OK\");\n    const [textArea, setTextArea] = useState(\"Brak danych\");\n    const [newClientname, setNewClientname] = useState(\"nowak\");\n    const [newDate, setNewDate] = useState(\"2022-10-30\");\n    const [newDescription, setNewDescription] = useState(\"Zakup USD\");\n    const [newAmount, setNewAmount] = useState(\"345.1\");\n    const [transferIDToDelete, setTransferIDToDelete] = useState(\"1\");\n\n\n    //Dodanie przelewu na serwer\n    async function addHiraganaScore() {\n\n        let clientname = newClientname;\n        let date = newDate;\n        let description = newDescription;\n        let amount = newAmount;\n\n        let username = newUsername;\n        let hiraganaScore = newHiraganaScore;\n\n\n        if ((username.length > 0) && (hiraganaScore.length > 0)) {\n            await axios.post('http://localhost:8081/addtransfer/',\n                { username, hiraganaScore }, //Podajemy parametry\n            )\n                .then(response => {\n                    let text = response.data;\n                    setStatus(text);\n                }).catch(err => {\n                    let myerror = \"Błąd połaczenia sieciowego.\" + err;\n                    setStatus(myerror);\n                });\n        }\n        else {\n            setStatus(\"Żadna z danych wstawianego przelewu nie może być pusta\");\n        }\n    }\n\n    const handleSubmit = (event) => {\n        addHiraganaScore();\n        event.preventDefault();\n    }\n\n\n    return (\n\n        <Container>\n\n            <Alert variant=\"info\">\n                <Alert.Heading><strong>Klient dostępu do przelewów w banku z użyciem REST (bez autoryzacji, HOOK) </strong></Alert.Heading>\n                Lokalizacja bazy: http://localhost:8081/\n            </Alert>\n\n            <p></p>\n\n            <h3>Status: {status}</h3>\n\n            <p></p>\n\n            <Form.Label> Dane nowego przelewu: </Form.Label>\n\n            <Form onSubmit={handleSubmit}>\n                <Form.Group className=\"auto\" onSubmit={handleSubmit}>\n                    <Form.Label> Klient: <input type=\"text\" name='newUsername' value={newUsername} onChange={(e) => setNewUsername(e.target.value)} /> </Form.Label>\n                    {' '}\n                    <Form.Label> Data przelewu: <input type=\"text\" name='newHiraganaScore' value={newHiraganaScore} onChange={(e) => setNewHiraganaScore(e.target.value)} /> </Form.Label>\n                    {' '}\n                    <Button variant=\"primary\" type=\"submit\">  Dodaj  </Button>\n                </Form.Group>\n                <p></p>\n            </Form >\n\n            <p></p>\n\n            <Form.Control as=\"textarea\" rows={8} type=\"text\" value={textArea} placeholder=\"\" onChange={(e) => setTextArea(e.target.value)} spellCheck=\"false\" />\n\n            <p></p>\n\n\n        </Container>\n\n    );\n\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,sCAAsC;AAC7C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,IAAI,MAAM,sBAAsB;AAAC;AAExC,eAAe,SAASC,gBAAgB,GAAG;EAAA;EAEvC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,aAAa,CAAC;EACvD,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,OAAO,CAAC;EAC3D,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,YAAY,CAAC;EACpD,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,WAAW,CAAC;EACjE,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,OAAO,CAAC;EACnD,MAAM,CAACkB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGnB,QAAQ,CAAC,GAAG,CAAC;;EAGjE;EACA,eAAeoB,gBAAgB,GAAG;IAE9B,IAAIC,UAAU,GAAGX,aAAa;IAC9B,IAAIY,IAAI,GAAGV,OAAO;IAClB,IAAIW,WAAW,GAAGT,cAAc;IAChC,IAAIU,MAAM,GAAGR,SAAS;IAEtB,IAAIS,QAAQ,GAAGC,WAAW;IAC1B,IAAIC,aAAa,GAAGC,gBAAgB;IAGpC,IAAKH,QAAQ,CAACI,MAAM,GAAG,CAAC,IAAMF,aAAa,CAACE,MAAM,GAAG,CAAE,EAAE;MACrD,MAAM/B,KAAK,CAACgC,IAAI,CAAC,oCAAoC,EACjD;QAAEL,QAAQ;QAAEE;MAAc,CAAC,CAAE;MAAA,CAChC,CACII,IAAI,CAACC,QAAQ,IAAI;QACd,IAAIC,IAAI,GAAGD,QAAQ,CAACE,IAAI;QACxB3B,SAAS,CAAC0B,IAAI,CAAC;MACnB,CAAC,CAAC,CAACE,KAAK,CAACC,GAAG,IAAI;QACZ,IAAIC,OAAO,GAAG,6BAA6B,GAAGD,GAAG;QACjD7B,SAAS,CAAC8B,OAAO,CAAC;MACtB,CAAC,CAAC;IACV,CAAC,MACI;MACD9B,SAAS,CAAC,wDAAwD,CAAC;IACvE;EACJ;EAEA,MAAM+B,YAAY,GAAIC,KAAK,IAAK;IAC5BnB,gBAAgB,EAAE;IAClBmB,KAAK,CAACC,cAAc,EAAE;EAC1B,CAAC;EAGD,oBAEI,QAAC,SAAS;IAAA,wBAEN,QAAC,KAAK;MAAC,OAAO,EAAC,MAAM;MAAA,wBACjB,QAAC,KAAK,CAAC,OAAO;QAAA,uBAAC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAA4F;QAAA;QAAA;QAAA;MAAA,QAAgB;IAAA;MAAA;MAAA;MAAA;IAAA,QAEvH,eAER;MAAA;MAAA;MAAA;IAAA,QAAO,eAEP;MAAA,uBAAalC,MAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eAEzB;MAAA;MAAA;MAAA;IAAA,QAAO,eAEP,QAAC,IAAI,CAAC,KAAK;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqC,eAEhD,QAAC,IAAI;MAAC,QAAQ,EAAEgC,YAAa;MAAA,wBACzB,QAAC,IAAI,CAAC,KAAK;QAAC,SAAS,EAAC,MAAM;QAAC,QAAQ,EAAEA,YAAa;QAAA,wBAChD,QAAC,IAAI,CAAC,KAAK;UAAA,qCAAU;YAAO,IAAI,EAAC,MAAM;YAAC,IAAI,EAAC,aAAa;YAAC,KAAK,EAAEZ,WAAY;YAAC,QAAQ,EAAGe,CAAC,IAAKC,cAAc,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK;UAAE;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA,QAAc,EAC/I,GAAG,eACJ,QAAC,IAAI,CAAC,KAAK;UAAA,4CAAiB;YAAO,IAAI,EAAC,MAAM;YAAC,IAAI,EAAC,kBAAkB;YAAC,KAAK,EAAEhB,gBAAiB;YAAC,QAAQ,EAAGa,CAAC,IAAKI,mBAAmB,CAACJ,CAAC,CAACE,MAAM,CAACC,KAAK;UAAE;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA,QAAc,EACrK,GAAG,eACJ,QAAC,MAAM;UAAC,OAAO,EAAC,SAAS;UAAC,IAAI,EAAC,QAAQ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAmB;MAAA;QAAA;QAAA;QAAA;MAAA,QACjD,eACb;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QACH,eAER;MAAA;MAAA;MAAA;IAAA,QAAO,eAEP,QAAC,IAAI,CAAC,OAAO;MAAC,EAAE,EAAC,UAAU;MAAC,IAAI,EAAE,CAAE;MAAC,IAAI,EAAC,MAAM;MAAC,KAAK,EAAEpC,QAAS;MAAC,WAAW,EAAC,EAAE;MAAC,QAAQ,EAAGiC,CAAC,IAAKhC,WAAW,CAACgC,CAAC,CAACE,MAAM,CAACC,KAAK,CAAE;MAAC,UAAU,EAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG,eAEpJ;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QAGC;AAIpB;AAAC,GArFuBvC,gBAAgB;AAAA,KAAhBA,gBAAgB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}