[{"C:\\Bazan\\Semestr 2\\Docker\\ZrodlaPrzykladow\\Javascript\\BankBezAutoryzacji\\BankBezAutoryzacji\\myreactapp\\src\\index.js":"1","C:\\Bazan\\Semestr 2\\Docker\\ZrodlaPrzykladow\\Javascript\\BankBezAutoryzacji\\BankBezAutoryzacji\\myreactapp\\src\\BankTransNoAuthHook.js":"2","C:\\BazanFullStack\\frontend\\src\\index.js":"3","C:\\BazanFullStack\\frontend\\src\\components\\BankTransNoAuthHook.js":"4","C:\\BazanFullStack\\frontend\\src\\components\\GetLastestScore.js":"5","C:\\BazanFullStack\\frontend\\src\\components\\GetHiraganaRomajiAndImage.js":"6","C:\\BazanFullStack\\frontend\\src\\components\\Hiragana.js":"7"},{"size":296,"mtime":1700058486942,"results":"8","hashOfConfig":"9"},{"size":6865,"mtime":1703081489835,"results":"10","hashOfConfig":"9"},{"size":554,"mtime":1703760752295,"results":"11","hashOfConfig":"12"},{"size":6502,"mtime":1703782285331,"results":"13","hashOfConfig":"12"},{"size":2549,"mtime":1703789812071,"results":"14","hashOfConfig":"12"},{"size":2568,"mtime":1703789323212,"results":"15","hashOfConfig":"12"},{"size":2551,"mtime":1703782194833,"results":"16","hashOfConfig":"12"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cemykb",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"i04bg1",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Bazan\\Semestr 2\\Docker\\ZrodlaPrzykladow\\Javascript\\BankBezAutoryzacji\\BankBezAutoryzacji\\myreactapp\\src\\index.js",[],[],"C:\\Bazan\\Semestr 2\\Docker\\ZrodlaPrzykladow\\Javascript\\BankBezAutoryzacji\\BankBezAutoryzacji\\myreactapp\\src\\BankTransNoAuthHook.js",["39"],[],"C:\\BazanFullStack\\frontend\\src\\index.js",[],[],"C:\\BazanFullStack\\frontend\\src\\components\\BankTransNoAuthHook.js",[],[],"C:\\BazanFullStack\\frontend\\src\\components\\GetLastestScore.js",["40"],[],"import axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\n\nexport default function GetLatestScores() {\n\n    const backendUrl = 'http://localhost:8081';\n    const [status, setStatus] = useState(\"OK\");\n    const [textArea, setTextArea] = useState(\"Tu powinna być zawartość bazy danych, ale jak nie to mi wciąż nie działa\");\n\n    async function getScore() {\n\n        await axios.post(`${backendUrl}/api/v1/getlatestscore/`)\n            .then(response => {\n                console.log(response.data);\n\n                let scoresListText = \"\"\n\n                response.data.forEach((e) => {\n                    let lid = e.id;\n                    let lusername = e.username;\n                    let lhiraganaScore1 = e.hiraganaScore1;\n                    let lhiraganaScore2 = e.hiraganaScore2;\n                    let lhiraganaScore3 = e.hiraganaScore3;\n                    let lkatakanaScore1 = e.katakanaScore1;\n                    let lkatakanaScore2 = e.katakanaScore2;\n                    let lkatakanaScore3 = e.katakanaScore3;\n\n                    let firstPartText = lusername.substring(0, (\"ERROR:\").length);\n\n\n                    if (firstPartText !== \"ERROR:\") {\n                        scoresListText += `${lid}, ${lusername}, ${lhiraganaScore1}, ${lhiraganaScore2}, ${lhiraganaScore3}, ${lkatakanaScore1}, ${lkatakanaScore2}, ${lkatakanaScore3}\\n`;\n                        setTextArea(scoresListText);\n                        setStatus(\"OK\");\n                    }\n                    else {\n                        let secondPartText = lusername.substring((\"ERROR:\").length, lusername.length);\n                        scoresListText = lusername + \"\\n\";\n                        setTextArea(scoresListText);\n                        setStatus(secondPartText);\n                    }\n                })\n\n            }).catch(err => {\n\n                let myerror = \"Błąd połaczenia sieciowego.\" + err;\n                setStatus(myerror);\n            });\n\n    }\n\n    return (\n\n        <Container>\n\n            <Button variant=\"primary\" onClick={getScore}>  Odczytaj aktualną listę przelewów  </Button>\n\n            <p></p>\n\n            <Form.Control as=\"textarea\" rows={8} type=\"text\" value={textArea} placeholder=\"\" onChange={(e) => setTextArea(e.target.value)} spellCheck=\"false\" />\n\n            <p></p>\n\n        </Container>\n\n    );\n\n}\n","C:\\BazanFullStack\\frontend\\src\\components\\GetHiraganaRomajiAndImage.js",["41"],[],"C:\\BazanFullStack\\frontend\\src\\components\\Hiragana.js",["42","43","44"],[],{"ruleId":"45","severity":1,"message":"46","line":6,"column":17,"nodeType":"47","messageId":"48","endLine":6,"endColumn":26},{"ruleId":"45","severity":1,"message":"49","line":11,"column":12,"nodeType":"47","messageId":"48","endLine":11,"endColumn":18},{"ruleId":"50","severity":1,"message":"51","line":80,"column":8,"nodeType":"52","endLine":80,"endColumn":30,"suggestions":"53"},{"ruleId":"45","severity":1,"message":"54","line":12,"column":24,"nodeType":"47","messageId":"48","endLine":12,"endColumn":37},{"ruleId":"45","severity":1,"message":"55","line":21,"column":21,"nodeType":"47","messageId":"48","endLine":21,"endColumn":28},{"ruleId":"45","severity":1,"message":"56","line":25,"column":25,"nodeType":"47","messageId":"48","endLine":25,"endColumn":28},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'status' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getRecordById'. Either include it or remove the dependency array.","ArrayExpression",["57"],"'setHiraganaId' is assigned a value but never used.","'idFound' is assigned a value but never used.","'lid' is assigned a value but never used.",{"desc":"58","fix":"59"},"Update the dependencies array to be: [getRecordById, targetNumberOfLetter]",{"range":"60","text":"61"},[2282,2304],"[getRecordById, targetNumberOfLetter]"]