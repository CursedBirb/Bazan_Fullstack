[{"C:\\Bazan_Fullstack-main\\frontend\\src\\index.js":"1","C:\\Bazan_Fullstack-main\\frontend\\src\\components\\GetHiraganaRomajiAndImage.js":"2","C:\\Bazan_Fullstack-main\\frontend\\src\\components\\BankTransNoAuthHook.js":"3","C:\\Bazan_Fullstack-main\\frontend\\src\\components\\Hiragana.js":"4","C:\\Bazan_Fullstack-main\\frontend\\src\\components\\GetLastestScore.js":"5","C:\\Bazan_Fullstack-main\\frontend\\src\\components\\LetterList.js":"6"},{"size":552,"mtime":1705435361397,"results":"7","hashOfConfig":"8"},{"size":5394,"mtime":1705481166123,"results":"9","hashOfConfig":"8"},{"size":6329,"mtime":1703868779000,"results":"10","hashOfConfig":"8"},{"size":2465,"mtime":1703868779000,"results":"11","hashOfConfig":"8"},{"size":2549,"mtime":1705481185227,"results":"12","hashOfConfig":"8"},{"size":319,"mtime":1705435361395,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hbl7r7",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Bazan_Fullstack-main\\frontend\\src\\index.js",[],[],"C:\\Bazan_Fullstack-main\\frontend\\src\\components\\GetHiraganaRomajiAndImage.js",["33","34"],[],"C:\\Bazan_Fullstack-main\\frontend\\src\\components\\BankTransNoAuthHook.js",[],[],"C:\\Bazan_Fullstack-main\\frontend\\src\\components\\Hiragana.js",["35","36","37"],[],"import axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useEffect, useState } from \"react\";\n\nexport default function GetLatestScores() {\n\n    const backendUrl = 'http://localhost:8081';\n    const [targetNumberOfLetter, setTargetNumberOfLetter] = useState(\"1\");\n    const [status, setStatus] = useState(\"OK\");\n    const [image, setImage] = useState(\"Brak Zdjęcia\");\n    const [romaji, setRomaji] = useState(\"Brak Litery\");\n    const [hiraganaId, setHiraganaId] = useState(\"1\");\n\n    async function getRecordById() {\n\n        await axios.post(`${backendUrl}/api/v1/gethiraganarecord/`)\n            .then(response => {\n                console.log(response.data);\n                let imageData = \"\";\n                let nameData = \"\";\n                let idFound = false;\n\n\n                response.data.forEach((e) => {\n                    let lid = e.id;\n                    let lhiraganaRomaji = e.hiraganaRomaji;\n                    let lhiraganaImage = e.hiraganaImage;\n                    let lhiraganaId = e.hiraganaId;\n\n                    let firstPartText = lhiraganaId.substring(0, (\"ERROR:\").length);\n\n\n                    if (firstPartText !== \"ERROR:\") {\n                        imageData = `${lhiraganaImage}\\n`;\n                        nameData = `${lhiraganaRomaji}\\n`;\n                        setStatus(\"OK\");\n                        setRomaji(nameData);\n                        setImage(imageData);\n                        idFound = true;\n                    }\n                    else {\n                        let secondPartText = lhiraganaId.substring((\"ERROR:\").length, lhiraganaId.length);\n                        setStatus(secondPartText);\n                        setRomaji(secondPartText);\n                        idFound = true;\n                    }\n                })\n\n            }).catch(err => {\n\n                let myerror = \"Błąd połaczenia sieciowego.\" + err;\n                setStatus(myerror);\n            });\n\n    }\n\n    const incrementTarget = () => {\n\n        setTargetNumberOfLetter(targetNumberOfLetter + 1);\n        getRecordById();\n\n    };\n\n    useEffect(() => {\n\n        getRecordById();\n\n    }, []);\n\n    return (\n\n        <div>\n\n            <button onClick={incrementTarget}>Pobierz Wynik</button>\n\n            <p>{targetNumberOfLetter}</p>\n            <p>{hiraganaId}</p>\n            <p>{status}</p>\n            <p>{romaji}</p>\n            <p>{image}</p>\n\n        </div>\n\n    );\n\n}\n","C:\\Bazan_Fullstack-main\\frontend\\src\\components\\GetLastestScore.js",["38"],[],"C:\\Bazan_Fullstack-main\\frontend\\src\\components\\LetterList.js",[],[],{"ruleId":"39","severity":1,"message":"40","line":80,"column":8,"nodeType":"41","endLine":80,"endColumn":16,"suggestions":"42"},{"ruleId":"39","severity":1,"message":"43","line":99,"column":8,"nodeType":"41","endLine":99,"endColumn":30,"suggestions":"44"},{"ruleId":"45","severity":1,"message":"46","line":12,"column":24,"nodeType":"47","messageId":"48","endLine":12,"endColumn":37},{"ruleId":"45","severity":1,"message":"49","line":21,"column":21,"nodeType":"47","messageId":"48","endLine":21,"endColumn":28},{"ruleId":"45","severity":1,"message":"50","line":25,"column":25,"nodeType":"47","messageId":"48","endLine":25,"endColumn":28},{"ruleId":"45","severity":1,"message":"51","line":11,"column":12,"nodeType":"47","messageId":"48","endLine":11,"endColumn":18},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getRecordById'. Either include it or remove the dependency array.","ArrayExpression",["52"],"React Hook useEffect has missing dependencies: 'generateRandomWrongAnswers', 'getRecordById', and 'randomCorrectAnswer'. Either include them or remove the dependency array.",["53"],"no-unused-vars","'setHiraganaId' is assigned a value but never used.","Identifier","unusedVar","'idFound' is assigned a value but never used.","'lid' is assigned a value but never used.","'status' is assigned a value but never used.",{"desc":"54","fix":"55"},{"desc":"56","fix":"57"},"Update the dependencies array to be: [getRecordById, romaji]",{"range":"58","text":"59"},"Update the dependencies array to be: [generateRandomWrongAnswers, getRecordById, randomCorrectAnswer, targetNumberOfLetter]",{"range":"60","text":"61"},[2727,2735],"[getRecordById, romaji]",[3045,3067],"[generateRandomWrongAnswers, getRecordById, randomCorrectAnswer, targetNumberOfLetter]"]