{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wolololo\\\\Desktop\\\\BJS\\\\front-end\\\\bjs\\\\src\\\\components\\\\LatestScores.js\";\nimport React, { Component } from 'react';\nimport api from './ScoresApi.js';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass LatestScores extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: 'OK',\n      textArea: \"Tu powinna być zawartość bazy danych, ale jak nie to mi wciąż nie działa\"\n    };\n  }\n  async componentDidMount() {\n    try {\n      const scoresList = await api.getScores();\n      let scoresListText = \"\";\n      scoresList.forEach(e => {\n        let lid = e.id;\n        let lusername = e.username;\n        let lhiragana_score_1 = e.hiragana_score_1;\n        let lhiragana_score_2 = e.hiragana_score_2;\n        let lhiragana_score_3 = e.hiragana_score_3;\n        let lkatakana_score_1 = e.katakana_score_1;\n        let lkatakana_score_2 = e.katakana_score_2;\n        let lkatakana_score_3 = e.katakana_score_3;\n        let firstPartText = lusername.substring(0, \"ERROR:\".length);\n        if (firstPartText !== \"ERROR:\") {\n          scoresListText = `${lid}, ${lusername}, ${lhiragana_score_1}, ${lhiragana_score_2}, ${lhiragana_score_3}, ${lkatakana_score_1}, ${lkatakana_score_2}, ${lkatakana_score_3}\\n`;\n          this.setState({\n            textArea: scoresListText,\n            status: \"OK\"\n          });\n        } else {\n          let secondPartText = lusername.substring(\"ERROR:\".length, lusername.length);\n          scoresListText = lusername + \"\\n\";\n          this.setState({\n            textArea: scoresListText,\n            status: secondPartText\n          });\n        }\n      });\n    } catch (error) {\n      let myerror = `Błąd połaczenia sieciowego. ` + error;\n      this.setState({\n        status: myerror\n      });\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Klient dost\\u0119pu do przelew\\xF3w w banku z u\\u017Cyciem REST (bez autoryzacji, CLASS) \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), \"Lokalizacja bazy: http://localhost:8081/\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Status: \", this.state.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"textarea\",\n        rows: 8,\n        type: \"text\",\n        value: this.state.textArea,\n        spellCheck: \"false\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default LatestScores;","map":{"version":3,"names":["React","Component","api","Container","Form","Alert","jsxDEV","_jsxDEV","LatestScores","constructor","props","state","status","textArea","componentDidMount","scoresList","getScores","scoresListText","forEach","e","lid","id","lusername","username","lhiragana_score_1","hiragana_score_1","lhiragana_score_2","hiragana_score_2","lhiragana_score_3","hiragana_score_3","lkatakana_score_1","katakana_score_1","lkatakana_score_2","katakana_score_2","lkatakana_score_3","katakana_score_3","firstPartText","substring","length","setState","secondPartText","error","myerror","render","children","variant","Heading","fileName","_jsxFileName","lineNumber","columnNumber","Control","as","rows","type","value","spellCheck"],"sources":["C:/Users/Wolololo/Desktop/BJS/front-end/bjs/src/components/LatestScores.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport api from './ScoresApi.js';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nclass LatestScores extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n      status: 'OK', \r\n      textArea: \"Tu powinna być zawartość bazy danych, ale jak nie to mi wciąż nie działa\" \r\n\r\n    };      \r\n  }\r\n\r\n  async componentDidMount() {\r\n    \r\n    try {\r\n        const scoresList = await api.getScores();\r\n  \r\n        let scoresListText = \"\";\r\n  \r\n        scoresList.forEach((e) => {\r\n\r\n            let lid = e.id; \r\n            let lusername = e.username; \r\n            let lhiragana_score_1 = e.hiragana_score_1; \r\n            let lhiragana_score_2 = e.hiragana_score_2; \r\n            let lhiragana_score_3 = e.hiragana_score_3; \r\n            let lkatakana_score_1 = e.katakana_score_1; \r\n            let lkatakana_score_2 = e.katakana_score_2; \r\n            let lkatakana_score_3 = e.katakana_score_3;\r\n\r\n            let firstPartText = lusername.substring(0, (\"ERROR:\").length);\r\n\r\n\r\n        if (firstPartText !== \"ERROR:\") {\r\n\r\n            scoresListText = `${lid}, ${lusername}, ${lhiragana_score_1}, ${lhiragana_score_2}, ${lhiragana_score_3}, ${lkatakana_score_1}, ${lkatakana_score_2}, ${lkatakana_score_3}\\n`;\r\n            this.setState({ textArea: scoresListText, status: \"OK\" });\r\n\r\n        } else {\r\n\r\n            let secondPartText = lusername.substring((\"ERROR:\").length, lusername.length);\r\n            scoresListText = lusername + \"\\n\";\r\n            this.setState({ textArea: scoresListText, status: secondPartText });\r\n\r\n          }\r\n        }); \r\n\r\n      } catch(error) {\r\n\r\n        let myerror = `Błąd połaczenia sieciowego. ` + error;\r\n        this.setState({ status: myerror });\r\n      }\r\n    }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <Container>\r\n\r\n        <Alert variant=\"info\">\r\n          <Alert.Heading><strong>Klient dostępu do przelewów w banku z użyciem REST (bez autoryzacji, CLASS) </strong></Alert.Heading>\r\n          Lokalizacja bazy: http://localhost:8081/\r\n        </Alert>\r\n\r\n        <p></p>\r\n\r\n        <h3>Status: {this.state.status}</h3>\r\n\r\n        <p></p>\r\n\r\n        <Form.Control as=\"textarea\" rows={8} type=\"text\" value={this.state.textArea} spellCheck=\"false\" />\r\n\r\n        </Container>\r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default LatestScores;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}