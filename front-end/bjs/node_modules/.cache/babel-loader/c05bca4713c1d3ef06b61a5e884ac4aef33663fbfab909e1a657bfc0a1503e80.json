{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wolololo\\\\Desktop\\\\BJS\\\\front-end\\\\bjs\\\\src\\\\components\\\\Hiragana.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst backendUrl = 'http://localhost:8001';\nconst HiraganaList = () => {\n  _s();\n  const [hiraganaList, setHiraganaList] = useState([]);\n  useEffect(() => {\n    const fetchItems = async () => {\n      try {\n        const response = await fetch(`${backendUrl}/api/v1/getHiraganaRecord`);\n        const data = await response.json();\n        console.log('Fetched data:', data);\n        setHiraganaList(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchItems();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Hiragana List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(hiraganaList, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(HiraganaList, \"oB2I1OSvFCmlyZt25oMsudKGl0k=\");\n_c = HiraganaList;\nexport default HiraganaList;\n{/* <h1>Lista znaków hiragany</h1>\r\n <ul>{this.state.hiraganaList.map((hiragana) => (\r\n  <li key={hiragana.id}>\r\n    <p>{hiragana.hiraganaName}</p>\r\n    {/* <img src={hiragana.hiraganaImage} alt={hiragana.hiraganaName} />\r\n  </li>\r\n ))}\r\n </ul>\r\n \n <button onClick={this.sendDataToBackend}>Send Data to Backend</button>\r\n <p>Back message from the backend: {this.state.message2}</p> */}\nvar _c;\n$RefreshReg$(_c, \"HiraganaList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","backendUrl","HiraganaList","_s","hiraganaList","setHiraganaList","fetchItems","response","fetch","data","json","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/Wolololo/Desktop/BJS/front-end/bjs/src/components/Hiragana.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst backendUrl = 'http://localhost:8001';\r\nconst HiraganaList = () => {\r\n  const [hiraganaList, setHiraganaList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchItems = async () => {\r\n      try {\r\n        const response = await fetch(`${backendUrl}/api/v1/getHiraganaRecord`);\r\n        const data = await response.json();\r\n        console.log('Fetched data:', data);\r\n        setHiraganaList(data);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchItems();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Hiragana List</h2>\r\n      <pre>{JSON.stringify(hiraganaList, null, 2)}</pre>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HiraganaList;\r\n\r\n{/* <h1>Lista znaków hiragany</h1>\r\n<ul>{this.state.hiraganaList.map((hiragana) => (\r\n  <li key={hiragana.id}>\r\n    <p>{hiragana.hiraganaName}</p>\r\n    {/* <img src={hiragana.hiraganaImage} alt={hiragana.hiraganaName} />\r\n  </li>\r\n))}\r\n</ul>\r\n\r\n<button onClick={this.sendDataToBackend}>Send Data to Backend</button>\r\n<p>Back message from the backend: {this.state.message2}</p> */}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAG,uBAAuB;AAC1C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACd,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEP,UAAW,2BAA0B,CAAC;QACtE,MAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,IAAI,CAAC;QAClCJ,eAAe,CAACI,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDP,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBlB,OAAA;MAAAc,QAAA,EAAMK,IAAI,CAACC,SAAS,CAAChB,YAAY,EAAE,IAAI,EAAE,CAAC;IAAC;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV,CAAC;AAACf,EAAA,CAxBID,YAAY;AAAAmB,EAAA,GAAZnB,YAAY;AA0BlB,eAAeA,YAAY;AAE3B,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAVC;AAU8D,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}