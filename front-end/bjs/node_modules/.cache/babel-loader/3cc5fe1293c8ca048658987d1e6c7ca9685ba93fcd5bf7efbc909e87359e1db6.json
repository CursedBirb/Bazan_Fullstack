{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wolololo\\\\Desktop\\\\BJS\\\\front-end\\\\bjs\\\\src\\\\components\\\\Hiragana.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst backendUrl = 'http://localhost:8001';\nconst HiraganaList = () => {\n  _s();\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    const fetchItems = async () => {\n      try {\n        const response = await fetch(`${backendUrl}/api/v1/getHiraganaRecord`);\n        const data = await response.json();\n        setItems(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchItems();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Item List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), \" - \", item.description]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(HiraganaList, \"E85yb7BhBnl3/OpymRdjFiQJ97s=\");\n_c = HiraganaList;\nexport default HiraganaList;\n{/* <h1>Lista znaków hiragany</h1>\r\n <ul>{this.state.hiraganaList.map((hiragana) => (\r\n  <li key={hiragana.id}>\r\n    <p>{hiragana.hiraganaName}</p>\r\n    {/* <img src={hiragana.hiraganaImage} alt={hiragana.hiraganaName} />\r\n  </li>\r\n ))}\r\n </ul>\r\n \n <button onClick={this.sendDataToBackend}>Send Data to Backend</button>\r\n <p>Back message from the backend: {this.state.message2}</p> */}\nvar _c;\n$RefreshReg$(_c, \"HiraganaList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","backendUrl","HiraganaList","_s","items","setItems","fetchItems","response","fetch","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","name","description","_c","$RefreshReg$"],"sources":["C:/Users/Wolololo/Desktop/BJS/front-end/bjs/src/components/Hiragana.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst backendUrl = 'http://localhost:8001';\r\nconst HiraganaList = () => {\r\n  const [items, setItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchItems = async () => {\r\n      try {\r\n        const response = await fetch(`${backendUrl}/api/v1/getHiraganaRecord`);\r\n        const data = await response.json();\r\n        setItems(data);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchItems();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Item List</h2>\r\n      <ul>\r\n        {items.map((item, index) => (\r\n          <li key={index}>\r\n            {/* Render item properties here */}\r\n            <strong>{item.name}</strong> - {item.description}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HiraganaList;\r\n\r\n{/* <h1>Lista znaków hiragany</h1>\r\n<ul>{this.state.hiraganaList.map((hiragana) => (\r\n  <li key={hiragana.id}>\r\n    <p>{hiragana.hiraganaName}</p>\r\n    {/* <img src={hiragana.hiraganaImage} alt={hiragana.hiraganaName} />\r\n  </li>\r\n))}\r\n</ul>\r\n\r\n<button onClick={this.sendDataToBackend}>Send Data to Backend</button>\r\n<p>Back message from the backend: {this.state.message2}</p> */}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAG,uBAAuB;AAC1C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEP,UAAW,2BAA0B,CAAC;QACtE,MAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,QAAQ,CAACI,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDL,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBjB,OAAA;MAAAa,QAAA,EACGT,KAAK,CAACc,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBpB,OAAA;QAAAa,QAAA,gBAEEb,OAAA;UAAAa,QAAA,EAASM,IAAI,CAACE;QAAI;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,OAAG,EAACE,IAAI,CAACG,WAAW;MAAA,GAFzCF,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACd,EAAA,CA9BID,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AAgClB,eAAeA,YAAY;AAE3B,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAVC;AAU8D,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}