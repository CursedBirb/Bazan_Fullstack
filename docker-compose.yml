version: '3'

services:

  postgres:
    image: postgres
    container_name: postgres_db
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Wolololo
    networks:
      - postgres-spring
    # volumes:
    #   - postgres_data:/var/lib/postgresql/data

  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    restart: always
    container_name: Springboot_Server
    expose:
      - "8080:8080"
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    environment:
      - SPRING.PROFILES.ACTIVE=default
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=Wolololo
    networks:
      - react-spring
      - postgres-spring

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    restart: always
    container_name: React
    environment:
      - WDS_SOCKET_PORT=0
    # expose:
      # - "3000"
    networks:
      - react-spring
    ports:
      # - "12345:3000"
      - "3000:3000"
    depends_on:
      - backend

networks:
  react-spring:
  postgres-spring:

# volumes:
#   postgres_data:

# Tried to add proxy
  # proxy:
  #   image: nginx:1.17
  #   restart: unless-stopped
  #   ports:
  #     - "8080:80"
  #   volumes:
  #     - ./proxy/default.conf:/etc/nginx/conf.d/default.conf

  # nginx-proxy:
  #   image: nginx
  #   ports:
  #     - "8080:80"
  #   volumes:
  #     - ./proxy/nginx.conf:/etc/nginx/nginx.conf
  #   depends_on:
  #     - frontend
  #     - backend
